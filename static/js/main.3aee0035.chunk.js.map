{"version":3,"sources":["layout/Header.js","layout/Footer.js","redux/income/income_actions.js","pages/income/components/Header.js","ui/rangeBar/Components/RangeBarLabel.js","services/general/logorithmic_functions.js","ui/rangeBar/Components/RangeBarValue.js","ui/rangeBar/Components/RangeBarSlider.js","ui/rangeBar/RangeBar.js","style/Icons.js","ui/dualRangeBar/DualRangeBar.js","pages/income/components/IncomeInput.js","ui/miniRangeBar/Components/MiniRangeBarLabel.js","ui/miniRangeBar/Components/MiniRangeBarValue.js","ui/miniRangeBar/Components/MiniRangeBarSlider.js","ui/miniRangeBar/MiniRangeBar.js","pages/income/components/PensionIncomeStartAges.js","pages/income/components/DesiredRetirementIncome.js","style/Themes.js","ui/buttons/ButtonDark.js","ui/buttons/ButtonLight.js","pages/income/components/ControlPanel.js","redux/income/income_selectors.js","charts/income/LifetimeIncomeBarChart.js","services/general/financial_functions.js","services/income/income_functions.js","redux/savings/savings_selectors.js","services/income/cpp_functions.js","services/income/rrspAndTfsa_functions.js","pages/income/Income.js","redux/savings/savings_actions.js","redux/pensionStartAges/pensionStartAges_actions.js","redux/user/user_actions.js","layout/Layout.js","App.js","redux/income/income_reducer.js","redux/pensionStartAges/pensionStartAges_reducer.js","redux/savings/savings_reducer.js","redux/user/user_reducer.js","redux/assumptions/assumptions_reducer.js","redux/rootReducer.js","index.js","assets/svgs/SavvyPlan_logo_final_grey.svg","assets/svgs/SavvyPlan_logo_final_white_justlogo.svg"],"names":["connect","HeaderContainer","Left","Logo","src","logoLight","height","width","fontSize","alt","Header3","Right","StyledNavLink","to","activeClassName","PageSelect","Hr","styled","div","props","theme","color","slate","medium","ice","PagePointer","small","flexContent","center","hr","NavLink","Header","FooterContainer","Top","border","primary","setKeyVariable_action","name","value","console","log","type","HeaderValues","state","x","y","e","this","setState","clientX","clientY","income_reducer","cppIncome","financialValue","oasIncome","rrsp","tfsa","nonRegistered","HeaderValuesWrapper","onMouseMove","handleMouseMove","PensionIncomeWrapper","CPPSummary","Circle","OASSummary","Vr","RRIFSummary","NRegSummary","Summary","Component","RangeBarLabel","handleChangeLabel","rangeBarProps","LabelAsInput","autoComplete","onChange","label","input","inverseLogslider","minv","Math","scale","RangeBarValue","valueAsInput","setLocalRangeAndLogValue","inverseLogValue","target","toFixed","setValue","toggleState","show","handleKeyDown","event","key","ValueAsInput","data-a-dec","onKeyDown","onBlur","Value","onClick","toLocaleString","sharedStyles","sandy","RangeBarSlider","useState","rangeBarValue","setRangeBarValue","setLocalRangeandLogValue","logValue","round","max","exp","logslider","sliderValue","Input","step","percentage","RangeBar","RangeBarWrapper","labelHidden","sharedIconAttributes","ChevronIcon","CloseCircle","PlusCircle","ChevronsRight","turquoise","KeyboardArrowDown","NavigateBefore","onyx","Navicon","Edit3","lightGrey","DualRangeRangeBar","fromAge","toAge","skipForwardBy","lowerValueAsInput","higherValueAsInput","handleSliderChange","setKeyVariables","handleClickRight","toggleLowerValueAsInputState","toggleHigherValueAsInputState","length","percentageMin","undefined","percentageMax","leftPosition","fillBarWidth","InputWrapper","totalWidth","InputLeft","min","InputRight","Bar","ValueBoxWrapper","handleInputChange","style","smallMedium","Button","button","IncomeInput","setIncome","handleRemoveItem","addItemToList","setFromAge","setToAge","count","incomeTypeArray","Object","values","filter","d","rangeBars","slice","Wrapper","YearsSelectorWrapper","SelectorTitleWrapper","DualRangeBar","map","incomeType","close","MiniRangeBarLabel","Label","MiniRangeBarValue","numberType","MiniRangeBarSlider","salmon","drab","miniRangeBar","PensionIncomeStartAges","setPensionIncome","pensionStartAges_reducer","MiniRangeBar","id","DesiredRetirementIncome","setReccomendedRetirementIncome","user_reducer","retirementIncome","lightTheme","blue","darkGrey","green","steelBlue","darkSalmon","smallest","mediumLarge","large","large2","largest","text","primaryHeading","boxShadow","lifted","linearGradient","pageBaseStyles","buttonStyles","GlobalStyles","createGlobalStyle","ButtonDark","ButtonComponent","backward","forward","ControlPanel","setCount","ControlPanelWrapper","Dialogue","ButtonLight","Text","ButtonWrapper","Sections","Section","TutorialButtonWrapper","stackedChartData","createSelector","incomeNamesArray","keys","financialValueArray","a","result","age","forEach","i","stackedChartKeys","retirementPensionIncome","reduce","acc","num","drawChart","margin","graphHeight","graphWidth","data","d3","remove","graph","append","attr","stack","order","offset","tooltip","d3Max","series","yScale","range","domain","xScale","paddingInner","paddingOuter","item","selectAll","enter","bandwidth","on","n","parentNode","className","animVal","nameIndex","findIndex","thisColor","thisYearTotalIncome","transition","duration","html","_","startCase","layerY","layerX","tickLabels","xAxisGroup","yAxisGroup","xAxis","tickValues","tickFormat","yAxis","ticks","call","update","StackedBarChartLifetimeIncome","elementWidth","elementHeight","updateSize","divRef","clientWidth","clientHeight","window","removeEventListener","addEventListener","Canvas","ref","canvasStackedBarChart","payment","rate","nperiod","pv","fv","pvif","pow","pmt","historicRRSP","1990","1991","1992","1993","1994","1995","1996","1997","1998","1999","2000","2001","2002","2003","2004","2005","2006","2007","2008","2009","2010","2011","2012","2013","2014","2015","2016","2017","2018","2019","2020","setMaxContributions","birthYear","rrspStartAge","setMaxContribution_action","tfsaStartAge","year","contributionLimit","totalRrspContEligibleIncome","contributeToCpp","rrspMaxContribution","savings_reducer","thisYear","Date","userAge","getFullYear","number","returns","assumptions_reducer","investmentReturns","rate1","beforeRetirementReturn","managementFee","inflationRate","rate2","afterRetirementReturn","rrspNestEgg","array","push","rrspContributions","totalContributions","rrspInterest","totalInterest","tfsaContributions","tfsaInterest","nonRegisteredContributions","nonRegisteredInterest","namesArray","valueArray","contribute","withdraw","rrspPercentage","totalValue","tfsaPercentage","nonRegisteredPercentage","savings","tfsaNestEgg","nonRegisteredNestEgg","adjustCpp","cache","cacheKey","income","adjustCppMemoized","adjustOas","adjustOasMemoized","calculateCpp","cppStartAge","ympe","pensionableIncome","currentAge","adjustedPensionableIncome","historicYmpe","annualCppPayment","sort","adjustedCppPayment","calculateCppMemoized","1971","1972","1973","1974","1975","1976","1977","1978","1979","1980","1981","1982","1983","1984","1985","1986","1987","1988","1989","calculateOptimumIncomeStreams","highestIncomes","maxRrspPayment","maxTfsaPayment","pensionIncome","incomeLessPension","tfsaIncome","taxAdvantagedDifferentialLessTfsa","rrspIncome","taxAdvantagedDifferential","rrspIncomeBelowTaxTop","taxAdvantagedDifferentialLessRrsp","calculateOptimumIncomeStreamsMemoized","addRetirementIncome","incomeStreams","setIncome_action","addRetirementIncomeMemoized","payload","calculateCpp_action","setPensionStartAge_action","removeItem_action","setRetirementIncome_action","oasStartAge","maxRrspValue","maxContribution","maxTfsaValue","b","determineMaxRegisteredPayments","toString","renderCPPandOASIncome","Page","ChartPlaceHolder","LifetimeIncomeBarChart","isChecked","oasPayment","GridContainer","path","component","Income","initialState","Number","employmentIncome","businessIncome","action","omit","cppPayment","valueThisRangeBarChanges","determineTotalContributions","transaction","lastValue","principlePercentage","totalContribution","determineTotalInterest","retirementAge","interestPercentage","optimizedContribution","optimizedWithdrawal","displayName","email","firstName","province","spouse","rrifWithdrawalAge","hasChildren","numberOfChildren","lifeSpan","priorities","gettingOutOfDebt","buildingASavingsPlan","CalculatingRetirementIncome","purchasingAHome","savingOnTaxes","managingSpending","userId","useremail","identifier","propertyAppreciation","persistConfig","storage","whitelist","rootReducer","combineReducers","persistReducer","store","createStore","persistor","persistStore","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3aee0035.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink} from \"react-router-dom\"\nimport styled from \"styled-components\"\nimport {connect} from \"react-redux\"\nimport logoLight from \"assets/svgs/SavvyPlan_logo_final_grey.svg\"\n\n function Header() {\n\n    return (\n        <HeaderContainer>\n            <Left>\n                <Logo>\n                    <img src={logoLight} height=\"100%\" width=\"100%\" fontSize=\"10rem\" alt=\"logo\"/>\n                </Logo>\n                <Header3>\n                    Savvy Plan\n                </Header3>\n            </Left>\n            <Right>\n          \n          <StyledNavLink to=\"/plan\" activeClassName=\"active\">\n              <PageSelect>\n                      YOUR PLAN\n              </PageSelect>\n          </StyledNavLink>\n          <Hr/>\n          <StyledNavLink to=\"/\" activeClassName=\"active\">\n              <PageSelect>\n                      DASHBOARD\n              </PageSelect>\n          </StyledNavLink>\n          <Hr/>\n          <StyledNavLink to=\"/Learn\" activeClassName=\"active\">\n                  <PageSelect>\n                     ACCOUNT\n                  </PageSelect>\n          </StyledNavLink>\n          <Hr/>\n          <StyledNavLink to=\"/assumptions\" activeClassName=\"active\">\n                  <PageSelect>\n                     ASSUMPTIONS\n                  </PageSelect>\n          </StyledNavLink>     \n          </Right>\n        </HeaderContainer>\n    )\n}\n\n\nexport default connect(null, {})(Header)\n\n//--------HEADER GRID LAYOUT---------------------------------------------------------------//\n\nexport const HeaderContainer = styled.div`\n    width: 100%;\n    text-align: center;\n    display: flex;\n    height: 6rem;\n    background: ${props => props.theme.color.slate};\n    font-weight: 200;    \n`\nconst Logo = styled.div`\n        width: 10rem;\n        height: 10rem;\n        margin-top: -2rem;\n\n`\nconst Left = styled.div`\n        flex: 1;\n        display: flex;\n        width: 10%;\n        align-content: center;\n        flex-direction: row;\n        align-items: center\n        justify-content: left;\n`\n\nconst Header3 = styled.div`\n        font-size: ${props => props.theme.fontSize.medium};\n        color: ${props => props.theme.color.ice};\n        font-weight: 300;\n        display: flex;\n        align-items: center;\n     \n`\nconst Right = styled.div`\n     display: flex;\n     jusitfy-content: space-between;\n     width: 50%;\n     align-items: center;\n     font-weight: 300;\n\n`\nexport const PagePointer = styled.div`\n        height: 5rem;\n        width: 5rem;\n        background: transparent;\n        clip-path: polygon(25% 73%, 0% 100%, 100% 100%);\n        position: absolute;\n        top: -2rem;\n        z-index: 3;\n`\nexport const PageSelect = styled.div`\n       padding: 1rem;\n       margin: 1rem;\n       font-size: ${props => props.theme.fontSize.small};\n       ${props => props.theme.flexContent.center};\n       height: 100%;\n       cursor: pointer;\n       position: relative\n       border-radius: 1px;\n       transition: all .1s ease-in;\n       &:hover {\n           background: ${props => props.theme.color.ice};\n           color:  ${props => props.theme.color.slate};\n       }\n`\nconst Hr = styled.hr`\n    width: 1rem;\n    color: white;\n`\n\n\nexport const StyledNavLink = styled(NavLink)`\n       text-decoration: none;\n       color: white;\n    &.active ${PagePointer} {\n        background-color: ${props => props.theme.color.slate};\n    } \n  } \n  `\n\n//\n//-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_FILE DETAILS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_//\n// Website header rendering the website title, buttons that change the theme, and a login button. ","import React from 'react'\nimport styled from \"styled-components\"\nimport { NavLink} from \"react-router-dom\"\nimport logoLight from \"assets/svgs/SavvyPlan_logo_final_white_justlogo.svg\"\n\nexport default function Header() {\n    return (\n        <FooterContainer>\n        <Top>\n            <StyledNavLink to=\"/Home\" activeClassName=\"active\">\n                <PageSelect>\n                    Home\n                </PageSelect>\n            </StyledNavLink>\n            <StyledNavLink to=\"/Dashboard\" activeClassName=\"active\">\n                <PageSelect>\n                Dashboard\n                </PageSelect>\n            </StyledNavLink>\n            <StyledNavLink to=\"/Learn\" activeClassName=\"active\">\n                <PageSelect>\n                    Learn\n                </PageSelect>\n        </StyledNavLink>\n        </Top>\n            <Hr/>\n        <Logo>\n            <img src={logoLight} height=\"100%\" width=\"100%\" fontSize=\"10rem\" alt=\"logo\"/>\n        </Logo>\n        </FooterContainer>\n    )\n}\n\n//-----------------------------------------------style-----------------------------------------------//\n\nexport const FooterContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: 20rem;\n    background: #536D7A;\n    align-items: center;\n    position: absolute;\n\n`\nconst Hr = styled.hr`\n    border-top: ${props => props.theme.border.primary};\n    width: 80%;\n    margin: 0 auto;\n    fill: red;\n`\nconst Logo = styled.div`\n        width: 10rem;\n        height: 10rem;\n        padding: 0;\n        text-align: center;\n`\nconst Top = styled.div`\n        flex: 1;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-around;\n        align-items: center;\n        height: 70%;\n        padding: 3rem;\n\n`\nexport const PagePointer = styled.div`\n        height: 5rem;\n        width: 5rem;\n        background: transparent;\n        clip-path: polygon(25% 73%, 0% 100%, 100% 100%);\n        position: absolute;\n        top: -2rem;\n        z-index: 3;\n`\nexport const PageSelect = styled.div`\n       width: 10rem;\n       padding: 0rem 1rem 0rem 1rem;\n       font-size: ${props => props.theme.fontSize.small};\n       ${props => props.theme.flexContent.center};\n       font-weight: 700;\n       height: 100%;\n       cursor: pointer;\n       position: relative\n`\n\nexport const StyledNavLink = styled(NavLink)`\n       text-decoration: none;\n       color: white;\n    &.active ${PagePointer} {\n        background-color: ${props => props.theme.color.slate};\n    } \n  } \n  `\n//-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_FILE DETAILS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_//\n//blank slate","export const setIncome_action = (age, contributeToCpp, financialValue, label, name, rangeBarValue) => ({\n    type: \"SET_INCOME_PER_YEAR\", \n    payload: {\n        age, \n        contributeToCpp, \n        financialValue, \n        label,\n        name,\n        rangeBarValue,\n    }\n})\n\nexport const removeItem_action = (age, name) => ({\n    type: \"REMOVE_INCOME_TYPE\", \n        age,\n        name\n})\n\n\nexport const setKeyVariable_action = (name, value) => {\nconsole.log(value);\n    return{\n    type: \"SET_KEY_VARIABLE\", \n    name, \n    value: value \n}\n\n}\nexport const calculateCpp_action = (age, cppStartAge, cacheKey) => {\nreturn {\n    type: \"CALCULATE_CPP_REFACTOR\", \n        age,   \n        cacheKey,\n        cppStartAge, \n}\n}\n\nexport const setPensionStartAge_action = (name, value) => {\nreturn {\n    type: \"SET_PENSION_START_AGE\", \n        name, \n        value \n}\n}\n\n\n","import React, { Component } from 'react'\nimport styled from \"styled-components\"\n//import calculateMarginalTaxRate from \"services/taxCalculationServices/taxCalculator\"\n//import Tooltip from \"UI/toolTip/Tooltip\"\nexport default class HeaderValues extends Component {\n\n//GRAB MOUSE COORDINATES FOR TOOLTIP\n    state = { \n              x: 0,                                                                                                              //These coordinates are set onMouseMove placing the tootip beside the mouse\n              y: 0,                                                                                                              //They are passed as props to the Tooltip componnent \n            }\n   handleMouseMove(e) {\n                this.setState({ x: e.clientX -120, y: e.clientY -140 })                                                          //Sets the state according to mouse position\n              }                                                                                                                  //They are passed as props to the Tooltip componnent                                                                                             //They are passed as props to the Tooltip componnent \n\n    render() {\n\n//DESTRUCTURE REDUCERS TO ASSIGN VARIABLES\n        const {\n             cppIncome : {financialValue: cppIncome },                                                                          //Grabs and assigns variable names from reducer\n             oasIncome : {financialValue: oasIncome },\n             rrsp: {financialValue: rrsp },\n             tfsa: {financialValue: tfsa },\n             nonRegistered: {financialValue: nonRegistered },\n        } = this.props.income_reducer[75]            \n\n\n\nreturn (\n            <HeaderValuesWrapper onMouseMove={(e) => this.handleMouseMove(e)}>\n            <Left >\n                                                                                                                 {/* Displays the total shortfall, the value determines the color of the number negative for red or  positive for lightGrey */}\n                <h1>\n                    Lifetime Income Chart BUILD 2\n                </h1>\n            </Left>\n            <Right>\n            <h2>Optimized Retirement Income Plan</h2>\n            <PensionIncomeWrapper onMouseMove={(e) => this.handleMouseMove(e) }>\n                    <CPPSummary>\n                    {`${(cppIncome)/1000}k`}  \n                        <h4>CPP</h4>\n                        <Circle color={\"#F29278\"}/>\n                    </CPPSummary>\n                    <OASSummary >\n                    {`${(oasIncome)/1000}k`}\n                        <h4 >OAS</h4>\n                        <Circle color={\"#7DA8B8\"}/>\n                    </OASSummary>\n                    <Vr/>\n                    <RRIFSummary>\n                    {`${(rrsp)/1000}k`}\n                    <h4 >RRSP</h4>\n                         <Circle color={\"#B0CFE3\"}/>\n                    </RRIFSummary>\n                    <NRegSummary>\n                    {`${tfsa/1000}k`}\n                    <h4>TFSA</h4>\n                         <Circle color={\"#81CCAF\"}/>\n\n                    </NRegSummary>\n                    {\n                        nonRegistered > 1000 ? \n                        <NRegSummary>\n                        {`${nonRegistered/1000}k`}\n                        <h4>N-Reg</h4>\n                             <Circle color={\"#B9B0A2\"}/>\n\n                      </NRegSummary>\n                    : null\n                    }\n\n            </PensionIncomeWrapper>\n            <Summary>\n             {`${(cppIncome + oasIncome + rrsp + tfsa + nonRegistered)/1000}k`}\n            <h4>Total</h4>\n            </Summary>\n            </Right>\n            \n            </HeaderValuesWrapper>\n        )\n    }\n}\n\n//-----------------------------------------------style-----------------------------------------------//\n\n\nconst HeaderValuesWrapper = styled.div`\n    grid-area: a;                                                                                             {/*Grid-area set in Income, \"a\" positions it at the top */}\n    height: 100%;\n    width: 100%;\n    display: flex;\n    margin-top: 4rem;\n    position: relative;\n    color: ${props => props.theme.color.slate};\n`\n\nconst Left = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n`\n\nconst Summary = styled.div`\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    padding: 1rem;\n    margin-top: 1rem;\n    cursor: pointer;\n    font-size: ${props => props.theme.fontSize.medium};\n    align-items: center;\n    justify-content: center;\n\n  \n`\nconst CPPSummary = styled(Summary)`\n    &:hover .cppTooltip {\n        opacity: 1;\n        visibility: visible;\n    }\n`\nconst OASSummary = styled(Summary)`\n    &:hover .oasTooltip {\n        opacity: 1;\n        visibility: visible;\n    }\n`\nconst RRIFSummary = styled(Summary)`\n    &:hover .rrifTooltip {\n        opacity: 1;\n        visibility: visible;\n    }\n`\nconst NRegSummary = styled(Summary)`\n    &:hover .taxTooltip {\n        opacity: 1;\n        visibility: visible;\n    }\n`\n\nconst Vr = styled.div`\n    height: 60%;\n    width: 1%;\n    margin-top: 2rem;\n    flex-basis: 0.1;\n    flex: 1 0.1 1;\n    border-left: ${props => props.theme.border.primary};\n`\n\nconst Right = styled.div`\n    width: 45%;\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n    align-items: center;\n`\nconst Circle = styled.div`\n   border-radius: 50%;\n   height: 1rem;\n   width: 1rem;\n   margin-top: .5rem;\n   background: ${props => props.color}\n   display: flex;\n   align-items: center;\n`\n\n\nconst PensionIncomeWrapper = styled.div`\n    display: flex;\n    width: 60%;\n    border-bottom: ${props => props.theme.border.primary};\n`\n\n\n\n\n","import React from 'react'\nimport styled from \"styled-components\"\n\nconst RangeBarLabel = ({handleChangeLabel, rangeBarProps}) => {\n        return (\n            <div>\n             <LabelAsInput \n                autoComplete=\"off\"\n                onChange={(e) => handleChangeLabel(e, rangeBarProps)}\n                value={rangeBarProps.label}\n                />         \n            </div>\n        )\n}\n\nexport default RangeBarLabel\n\n//-----------------------------------------------style-----------------------------------------------//\n\nconst LabelAsInput = styled.input`\n        font-size: ${props =>props.theme.fontSize.small};\n        color: ${props => props.theme.color.slate};\n        position: absolute;\n        width: 85%;\n        top: -1.5rem;\n        left: 1rem;\n        padding: 0.3rem;\n        text-transform: capitalize;\n        background: transparent;\n        border: none;\n        cursor: pointer;\n        &:focus,\n        &:active {\n            outline: 0  !important;\n            border: none;\n            border-bottom: 1px dotted lightGrey;\n            background: white;\n           \n        }\n\n`\n\n//-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_FILE DETAILS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_//\n// The label or the item such as house or car which is also editable.  ","export const logslider = (value, max) => {\n    var minp = 0;\n    var maxp = 100;\n  \n    // The result should be between 100 an 10000000\n    var minv = Math.log(100);\n    var maxv = Math.log(1000000);\n  \n    // calculate adjustment factor\n    var scale = (maxv-minv) / (maxp-minp);\n  \n    return Math.exp(minv + scale*(value-minp));\n  }\n\n  \n\nexport const inverseLogslider = (value) => {\n    // position will be between 0 and 100\n    var minp = 0;\n    var maxp = 100;\n  \n    // The result should be between 100 an 10000000\n    var minv = Math.log(100);\n    var maxv = Math.log(1000000);\n  \n    // calculate adjustment factor\n    var scale = (maxv-minv) / (maxp-minp);\n  \n    return (Math.log(value)-minv) / scale + minp;\n  }\n\n\n  export const roundNumber = (total) => {\n    return total < 1000 ? Math.round(total/10) * 10 :\n                          total < 50000 && total > 1000 ? Math.round(total/100) * 100 :\n                         total < 100000 && total > 5000 ? Math.round(total/1000) * 1000\n                         : Math.round(total/10000) * 10000\n     \n   }","import React, { Component } from 'react'\nimport styled from \"styled-components\"\nimport {inverseLogslider} from \"services/general/logorithmic_functions\"\n\n class RangeBarValue extends Component {\n    state = {\n        valueAsInput: false,                                                                                                        //state decides whether the label should be shown as an input or just a regular number. \n    }\n\n    setLocalRangeAndLogValue = (e) => {\n        \n        const inverseLogValue = inverseLogslider(+e.target.value).toFixed()                                                         //The user is inputting a financial value like 22000, which has to be converted to a rangebar value between 1 and 100\n        this.props.setValue(+e.target.value, inverseLogValue, this.props.rangeBarProps) \n    }\n\n    toggleState = ()=> {\n        const show = this.state.valueAsInput                                                                                        //When clicked the value will toggle between being an input or not. \n        this.setState({\n            valueAsInput: !show\n        })\n    }\n    \n    handleKeyDown = (event) => {                                                                                \n        if (event.key === 'Enter') {\n            this.setState({\n                valueAsInput: false,\n            })\n        }\n      }\n\n    render() {\n        \n        return (\n            <div>\n            {this.state.valueAsInput ? \n             <ValueAsInput \n                type=\"text\"\n                name={this.props.rangeBarProps.name}\n                data-a-dec=\",\"\n                autoComplete=\"off\"\n                onChange={(e) => this.setLocalRangeAndLogValue(e)}\n                value={this.props.rangeBarProps.financialValue}\n                onKeyDown={(event) => this.handleKeyDown(event)}\n                onBlur={this.toggleState} \n             />\n             \n             :\n             <Value onClick={this.toggleState}>${(this.props.rangeBarProps.financialValue).toLocaleString()}</Value>\n            }\n            {/*onBlur is used so that if the user clicks anywhere else on the pages it will submit the function */}\n            </div>\n        )\n    }\n}\n\n\n\nexport default RangeBarValue\n\n//-----------------------------------------------style-----------------------------------------------//\n\nconst sharedStyles = `\n    position: absolute;\n    left: 95%;\n    top: .8rem;\n    border-radius: 3px;\n    padding: .4rem;\n    height: 2.6rem;\n    width: 8rem;\n    align-content: center;\n    text-align: center;\n    color: white;\n    border: none;\n`\n\nconst ValueAsInput = styled.input`\n        ${sharedStyles}\n        background: ${props => props.theme.color.slate};\n        font-size: ${props =>props.theme.fontSize.small};\n        z-index: 23;\n        outline: none;\n        ::-webkit-inner-spin-button, \n        ::-webkit-outer-spin-button { \n        -webkit-appearance: none; \n}\n\n\n`\nexport const Value = styled.div`\n         ${sharedStyles}\n        background: ${props => props.theme.color.slate};\n        font-size: ${props =>props.theme.fontSize.small};\n        cursor: pointer;\n    \n}\n        &:before {\n            content: \"\";\n            height: 1rem;\n            width: 1rem;\n            background: ${props => props.theme.color.slate};\n            position: absolute;\n            transform: rotate(45deg);\n            left: -.5rem;\n            top: .8rem;\n        };\n        &:focus {\n           border-bottom: 3px solid ${props => props.theme.color.sandy};\n           \n        }\n`\n\n//-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_FILE DETAILS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_//\n//THe value is displayed as either a regular number or an input when clicked which will change the number. ","import React, { useState} from 'react'\nimport styled from \"styled-components\"\nimport {logslider} from \"services/general/logorithmic_functions\"\n\nconst RangeBarSlider = ({setValue, rangeBarProps, color}) => {                                                                        //destructure essential props\n\n                                                                           //log value is the larger value resulting from a logorithmic function, enabling the bar to range between 1 and 1 million\n    const [rangeBarValue, setRangeBarValue] = useState(0)                                                                      //rangeBar value is the actual value of the rangebar, from 1 - 100\n\n    const setLocalRangeandLogValue = (e) => {\n        const logValue = Math.round(logslider(e.target.value)/100)*100\n\n        setRangeBarValue(e.target.value)\n        setValue(logValue, rangeBarValue, rangeBarProps)\n    }  \n    const sliderValue = rangeBarProps.rangeBarValue > 0 ? rangeBarProps.rangeBarValue : 0\n\n        return (\n            <Input\n                type=\"range\"\n                name={rangeBarProps.name}\n                onChange={(e) => setLocalRangeandLogValue(e)}\n                value={rangeBarProps.rangeBarValue}\n                max={100}\n                step={0.1}\n                percentage={`${(sliderValue/100)*100}%`}\n                color={color}\n            />\n        )\n    \n}\n//renders the slide bar. Percentage is calcuated here and pass to styled components to have the slide bar be \n//two different colors as it moves. \n\nexport default RangeBarSlider\n\n//-----------------------------------------------style-----------------------------------------------//\n\n\n\n\nconst Input = styled.input`\n\n    width: 18rem;\n    height: 3px;\n    -webkit-appearance: none;\n    background: linear-gradient(90deg, \n        ${props => props.theme.color.sandy} ${props => props.percentage}, \n        ${props => props.theme.color.slate} ${props => props.percentage});\n    outline: none;\n    opacity: 0.7;\n    -webkit-transition: 0.2s;\n    border-radius: 12px;\n    margin-top: 2rem;\n    margin-bottom: 2rem;\n    transition: all 1s ease;\n    &:after {\n        content: \"\";\n            top: 3.3rem;\n            left: 95%;\n            height:.3rem;\n            width: 8rem;\n            background: transparent;\n            position: absolute;\n            z-index: 3;\n    }\n    &:active   {\n        &:after{\n            background: ${props => props.theme.color.sandy};\n        }\n \n        }\n\n    \n\n&::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    appearance: none;\n    width: 12px;\n    height: 12px;\n    background: ${props => props.theme.color.slate};\n    border-radius: 50%;\n    cursor: pointer;\n}\n\n&:active::-webkit-slider-thumb\n{\n    background: ${props => props.theme.color.sandy};\n}\n\n`\n\n//-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_FILE DETAILS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_//\n// The actual slider bar. ","import React from 'react'\nimport styled from \"styled-components\"\nimport RangeBarLabel from \"./Components/RangeBarLabel\"\nimport RangeBarValue from \"./Components/RangeBarValue\"\nimport RangeBarSlider from \"./Components/RangeBarSlider\"\n\n\n/*Props Required to be passed:\n1. setIncome \n      a function that receives a name, a logValue and a rangebar value and\n      uses those variables to pass into the action and set the reducer. \n2. rangeBarProps\n     This is an object containing the item name, id, label, financial value and rangebar value. It \n     can also contain variables useful to the parent state that will be passed back and used to guide\n     any changes to the correct position in the reducer via the action.  \n*/ \n\n const RangeBar = ({...props}) => {\n\n        return (\n            < RangeBarWrapper>\n               \n                {\n                    props.labelHidden ? null \n                    :\n                     <RangeBarLabel {...props}\n                    />\n                }\n                   \n                <RangeBarSlider\n                     {...props}\n                />\n                <RangeBarValue\n                     {...props}\n                />\n               \n                \n            </RangeBarWrapper>\n        )\n}\n\nexport default RangeBar\n\n//-----------------------------------------------style-----------------------------------------------//\n\nconst RangeBarWrapper = styled.div`\n    margin-top: 1rem;\n    position: relative;\n    width: 23rem;\n\n`\nconst  CloseWrapper = styled.div`\n    position: absolute;\n    top: .9rem;\n    left: 135%;\n    cursor: pointer;\n    z-index: 300;\n    border-radius: 50%;\n    overflow: hidden;\n    color: ${props => props.theme.color.slate};\n`\n\n//-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_FILE DETAILS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_//\n// This is the entire rangebar wrapper that contains the label, the range bar input and the value output. ","import styled from \"styled-components\"\nimport {CloseCircle} from \"styled-icons/remix-fill/CloseCircle\"\nimport {PlusCircle} from \"styled-icons/boxicons-solid/PlusCircle\"\nimport {ChevronsRight} from \"styled-icons/feather/ChevronsRight\"\nimport {KeyboardArrowDown} from \"styled-icons/material/KeyboardArrowDown\"\nimport {Navicon} from \"styled-icons/evil/Navicon\"\nimport {NavigateBefore} from \"styled-icons/material/NavigateBefore\"\nimport {Edit3} from \"styled-icons/feather/Edit3\"\n\n\n\nconst sharedIconAttributes = `\n    height: 2.4rem;\n    width: 2.4rem;\n    color: lightGrey;\n`\n\nexport const Close = styled(CloseCircle)`\n    ${sharedIconAttributes}\n`\nexport const PlusIcon = styled(PlusCircle)`\n    ${sharedIconAttributes}\n`\nexport const ChevronIcon = styled(ChevronsRight)`\n    ${sharedIconAttributes}\n    color: ${props => props.theme.color.turquoise}\n`\n\nexport const ArrowDown = styled(KeyboardArrowDown)`\n    height: 3.2rem;\n    width: 3.2rem;\n    color: ${props => props.theme.color.turquoise}\n`\nexport const ArrowLeft = styled(NavigateBefore)`\n    height: 3.2rem;\n    width: 3.2rem;\n    color: ${props => props.theme.color.onyx}\n`\nexport const NavIcon = styled(Navicon)`\n    height: 4.2rem;\n    width: 4.2rem;\n    color: ${props => props.theme.color.onyx}\n`\nexport const Edit = styled(Edit3)`\n    height: 2.2rem;\n    width: 2.2rem;\n    color: ${props => props.theme.color.lightGrey}\n`\n","import React, { Component } from 'react'\nimport styled from \"styled-components\"\nimport {ChevronIcon} from \"style/Icons\"\n\n/*Props Required to be passed:\n1. lowerValue and higherValue\n2. a function called setDualRangeValues which will receive the fromAge and upper values and then set them accordingly\n*/\n\nclass DualRangeRangeBar extends Component {\n\n    state = {\n        fromAge: this.props.fromAge,\n        toAge: this.props.toAge, \n        skipForwardBy: 10, \n        lowerValueAsInput: false,\n        higherValueAsInput: false,\n    }\n\n    handleSliderChange = (e) => {\n    \n        const value = e.target.value\n        if  (this.state.fromAge >= this.state.toAge) {\n            this.setState({\n                toAge: +value + 5,\n                fromAge: +this.state.toAge - 1,\n            })\n        }\n        else {\n            this.setState({\n                [e.target.name]: +value\n            })\n        }\n        if (e.target.name === \"fromAge\") {\n            this.props.setKeyVariables(\"fromAge\", +value)\n        }\n        else {\n            this.props.setKeyVariables(\"toAge\", +value)\n        }\n  \n    }\n\n    handleInputChange(e) {\n            this.setState({\n                [e.target.name]: +e.target.value\n            })\n            \n        return e.target.value.length > 1 ?   this.props.setKeyVariables(e.target.name, +e.target.value) : null\n          \n    }\n    \n    handleClickRight = () => {\n        const fromAge = this.state.toAge < 95 ? this.state.toAge : 85\n        const toAge = this.state.toAge + 10 < 95 ? this.state.toAge + this.state.skipForwardBy : 95\n        console.log(fromAge);\n        this.setState({\n            fromAge: fromAge,\n            toAge: toAge\n        })\n        this.props.setKeyVariables(\"fromAge\", fromAge)\n        this.props.setKeyVariables(\"toAge\", toAge)\n    }\n\n    toggleState = ()=> {\n        const show = this.state.valueAsInput\n        this.setState({\n            valueAsInput: !show\n        })\n    }\n    //When clicked the value will toggle between being an input or not. \n    \n    handleKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            this.setState({\n                valueAsInput: false,\n            })\n        }\n      }\n\n      toggleLowerValueAsInputState = ()=> {\n        const show = this.state.lowerValueAsInput\n        this.setState({\n            lowerValueAsInput: !show\n        })\n    }\n    toggleHigherValueAsInputState = ()=> {\n        const show = this.state.higherValueAsInput\n        this.setState({\n            higherValueAsInput: !show\n        })\n    }\n    //When clicked the value will toggle between being an input or not. \n    \n    handleKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            this.setState({\n                lowerValueAsInput: false,\n                higherValueAsInput: false,\n            })\n        }\n      }     \n      \n    render() {\n \n        const totalWidth = 300 // width the runner bar\n        const percentageMin = this.state.fromAge.length > 1 || this.state.fromAge.length === undefined ? this.state.fromAge / 77 : null //percentage of the runnerbar that is shifting left as the thumb moves\n        const percentageMax = this.state.toAge / 77 //total percentage of the toAge value\n        //to account for the fact that the minimum value is 18 we have to make the rage 77 (95 - 18)\n\n        //the div moves by its left position and the divs length is set accordingly\n        const leftPosition = (percentageMin * totalWidth).toFixed() //where the overlay div is positioned to the left\n        const fillBarWidth = ((percentageMax - percentageMin) * totalWidth + 1).toFixed() // how long the div will be \n\n        return (\n            <div >\n            {/* this is the runner bar*/}\n                <InputWrapper \n                    totalWidth = {totalWidth}\n                >\n            {/* this controls the thumb of the fromAge value*/}\n                <InputLeft\n                    name=\"fromAge\"\n                    type=\"range\"\n                    onChange={(e) => this.handleSliderChange(e)}\n                    value={this.state.fromAge}\n                    min={18}\n                    max={95}\n                    step={1}\n            />\n            {/* this controls the thumb of the toAge value*/}\n        \n                <InputRight\n                    name=\"toAge\"\n                    type=\"range\"\n                    onChange={(e) => this.handleSliderChange(e)}\n                    value={this.state.toAge}\n                    min={18}\n                    max={95}\n                    step={1}\n            />\n            {/* this is the bar that sits on top and sets the color of the inner area*/}\n            <Bar\n                // style={{left: `${leftPosition - 2.5}rem`, width: `${fillBarWidth}rem`}}\n                fillBarWidth = {fillBarWidth}\n                percentageMin = {percentageMin}\n                percentageMax = {percentageMax}\n                leftPosition = {leftPosition}\n            />\n                </InputWrapper>\n            {/* this is the display container that shows the two values to the user*/}\n                <ValueBoxWrapper>\n                {this.state.lowerValueAsInput ? \n                    <ValueAsInput \n                       type=\"number\"\n                       name=\"fromAge\"\n                       autoComplete=\"off\"\n                       onChange={(e) => this.handleInputChange(e)}\n                       value={this.state.fromAge}\n                       onKeyDown={(event) => this.handleKeyDown(event)}\n                       onBlur={() => this.toggleLowerValueAsInputState()} \n                    />\n                    \n                    :\n                    <Value onClick={() => this.toggleLowerValueAsInputState()}>{(this.state.fromAge).toLocaleString()}</Value>\n                   }\n                    <Button onClick={() => this.handleClickRight()}>\n                        <ChevronIcon style={{color: \"white\"}}/>\n                    </Button>\n                    {this.state.higherValueAsInput ? \n                        <ValueAsInput \n                           type=\"number\"\n                           name=\"toAge\"\n                           autoComplete=\"off\"\n                           onChange={(e) => this.handleInputChange(e)}\n                           value={this.state.toAge}\n                           onKeyDown={(event) => this.handleKeyDown(event)}\n                           onBlur={() => this.toggleHigherValueAsInputState()} \n                        />\n                        \n                        :\n                        <Value onClick={() => this.toggleHigherValueAsInputState()}>{this.state.toAge}</Value>\n                       }\n                </ValueBoxWrapper>\n\n                \n            </div>\n        )\n    }\n}\n\n\n\nexport default DualRangeRangeBar\n\n\n//-----------------------------------------------style-----------------------------------------------//\n\nconst InputWrapper = styled.div`\n    position: relative;\n    height: 3px;\n    width: ${props => props.totalWidth}px;\n    margin: 11px;\n    background-color: ${props => props.theme.color.slate};\n    border-radius: 7px;\n`\nconst Bar = styled.div`\n    position: absolute;\n    width: ${props => props.fillBarWidth - 3}px;\n    left: ${props => props.leftPosition - 70}px;\n    height: 3px;\n    background: ${props => props.theme.color.sandy};\n    /* z-index: 11; */\n`\nconst InputLeft = styled.input`\n    -webkit-appearance: none;\n        width: 100%;\n        background: transparent;\n        position: relative;\n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n  }\n  &:focus {\n    outline: none;\n  }\n  position: absolute;\n    left: 0px;\n    top: -8.5px;\n    margin: 0px;\n    border-style: none;\n    \n    z-index: 10;\n    &::-webkit-slider-thumb {\n        -webkit-appearance: none;\n    appearance: none;\n    width: 12px;\n    margin-top: 3px;\n    height: 12px;\n    background: ${props => props.theme.color.slate};\n    border-radius: 50%;\n    cursor: pointer;\n    \n    transition-property: background-color;\n    transition-duration: 0.15s;\n    transition-timing-function: ease;\n  }\n    &::-webkit-slider-thumb:hover, input[type=\"range\"]::-webkit-slider-thumb:active {\n    background-color: ${props => props.theme.color.sandy};\n  }\n    &::-webkit-slider-runnable-track {\n    height: 7px;\n    background-color: transparent;\n  }\n`\nconst InputRight = styled(InputLeft)`\n        top: -20px;\n        &::-webkit-slider-thumb {\n    transform: translateY(12.5px);\n  }\n`\n\nconst ValueBoxWrapper = styled.div`\n    display: flex;\n    justify-content: space-around;\n    z-index: 300;\n    width: 100%;\n    padding: 1rem;\n    z-index: 100;\n    align-items: center;\n    font-size: ${props =>props.theme.fontSize.smallMedium};\n`\nconst Button = styled.button`\n        border-radius: 3px;\n        padding: .6rem;\n        height:3.2rem;\n        font-size: 1.4rem;\n        width: 3.5rem;\n        text-align: center;\n        background: ${props => props.theme.color.slate};\n        color: white;\n        cursor: pointer;\n        outline: none;\n        text-align: center;\n`\nconst sharedStyles = `\n        border-radius: 1px;\n        padding: .6rem;\n        height: 2.6rem;\n        font-size: 1.4rem;\n        width: 3.5rem;\n        text-align: center;\n        color: white;\n        border: none;\n        background: ${props => props.theme.color.slate};\n`\n\nconst ValueAsInput = styled.input`\n        ${sharedStyles}\n        background: ${props => props.theme.color.slate};\n        font-size: ${props =>props.theme.fontSize.small};\n        z-index: 33;\n        outline: none;\n        ::-webkit-inner-spin-button, \n        ::-webkit-outer-spin-button { \n        -webkit-appearance: none; \n}\n`\nexport const Value = styled.div`\n         ${sharedStyles}\n        background: ${props => props.theme.color.slate};\n        font-size: ${props =>props.theme.fontSize.small};\n        cursor: pointer;\n        position: relative;\n    \n}\n        &:before {\n            content: \"\";\n            height: 1rem;\n            width: 1rem;\n            background: ${props => props.theme.color.slate};\n            position: absolute;\n            transform: rotate(45deg);\n            left: 1.2rem;\n            top: -.5rem;\n        };\n        &:focus {\n           border-bottom: 3px solid ${props => props.theme.color.sandy};\n           \n        }\n`\n","import React from 'react'\nimport RangeBar from \"ui/rangeBar/RangeBar\"\nimport DualRangeBar from \"ui/dualRangeBar/DualRangeBar\"\nimport styled from \"styled-components\"\n//import AddItemBox from \"ui/addItemBox/AddItemBox\"\n\nexport default function IncomeInput({setIncome, handleChangeLabel, income_reducer, addItemToList, handleRemoveItem, setFromAge, setToAge, fromAge, toAge, count}) {                           //Uses Destructing to assign variables and functions needed for this function                                                \n\n    const setKeyVariables = (name, value) => {\n        name === \"fromAge\" ? setFromAge(value) : setToAge(value)\n    }\n\n    const incomeTypeArray = Object.values(income_reducer[fromAge])                                                                //Converts the year list to an array so that it can be mapped through for rangebars  \n                        .filter(d => d.name !== \"oasIncome\")                                                                             //Range Bars only show for income the user is inputting, not retirementIncome, these are filtered out                       \n                        .filter(d => d.name !== \"cppIncome\")\n                        .filter(d => d.name !== \"rrsp\") \n                        .filter(d => d.name !== \"tfsa\") \n                        .filter(d => d.name !== \"nonRegistered\") \n\n    const rangeBars = count > 2 ? incomeTypeArray : incomeTypeArray.slice(0,1)\n\n    return (\n        <Wrapper> \n            {\n                count > 0 ? \n                <YearsSelectorWrapper> \n                    <SelectorTitleWrapper>\n                        <div>From Age</div>    \n                        <div>To Age</div>    \n                    </SelectorTitleWrapper>\n                    <DualRangeBar\n                        fromAge={fromAge}                                                                                       //fromAge sets the from Age, eg. age 18 in 18-45\n                        toAge={toAge}                                                                                           //toAge sets the to Age, eg. age 45 in 18-45\n                        setKeyVariables={setKeyVariables}                                                                                      //reaches into reducer to set the values\n                    />\n            </YearsSelectorWrapper>  \n            : \n            null\n            }\n                {\n                    count > 1 ? \n                    <RangeBarWrapper>\n                        {rangeBars.map(incomeType => <RangeBar                                                                                    //Mapping through the types of income to render a rangeBar for Each                                                 \n                                                            key={incomeType.name}\n                                                            rangeBarProps={incomeType}\n                                                            setValue={setIncome}\n                                                            handleChangeLabel = {handleChangeLabel}\n                                                            handleRemoveItem={handleRemoveItem}\n                                                            close={true}\n                                                          \n                                                            />)\n                        }\n                        {/* <AddItemBox                                                                                                                       //Box allowing the user to add new types of income     \n                                firstButtonText={\"Add New Income\"}\n                                listNewItemWillBeAddedToo={incomeTypeArray}\n                                checkboxLabel={\"Contribute To Canada Pension Plan?\"}\n                                addItemToList={addItemToList}\n            \n                        /> */}\n                    </RangeBarWrapper>\n                    : null\n                }                                                                                                             {/* Presents a dual rangebar for the user to input their starting and ending ages for inputting income */}\n\n        </Wrapper>                            \n    )\n}\n//-----------------------------------------------style-----------------------------------------------//\n\n\nconst Wrapper= styled.div`\n    margin-top: 2rem;\n`\n\nconst RangeBarWrapper = styled.div`\n  margin-top: 2rem;\n  overflow: hidden;\n  position: relative;\n  text-align: center;\n`\n\nconst YearsSelectorWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    align-items: center;\n`\n\n\nconst SelectorTitleWrapper = styled.div`\n    display: flex;\n    justify-content: space-around;\n    width: 100%;\n    padding: .5rem;\n    font-size: ${props =>props.theme.fontSize.small};\n    color: ${props => props.theme.color.slate};\n`\n\n\n//-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_FILE DETAILS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_//\n/*\n    This enables the user to input their income. They select an age range for the years in which they would like to input\n    their income. Once they've selected the range they slide the range bars to change the value of the income and it fills\n    into the reducer showing on the chart. There is an add item box which enables them to add new sources of income. \n\n\n*/ \n","import React, { Component } from 'react'\nimport styled from \"styled-components\"\n\n class MiniRangeBarLabel extends Component {\n\n    render() {\n        return (\n                <Wrapper>\n             <Label \n             name={this.props.rangeBarProps.name}\n                > {this.props.rangeBarProps.label}</Label>      \n                </Wrapper> \n\n        )\n    }\n}\n\nexport default MiniRangeBarLabel\n\n \n//-----------------------------------------------style-----------------------------------------------//\n\nconst Wrapper = styled.div`\n   text-align: center;\n`\nconst Label = styled.div`\n        font-size: ${props =>props.theme.fontSize.small};\n        color: ${props => props.theme.color.slate};\n        padding: 0.3rem;\n        text-transform: capitalize;\n        background: transparent;\n        border: none;\n        text-align: center;\n        width: 100%;\n`\n\n//-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_FILE DETAILS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_//\n// The label or the item such as house or car which is also editable.  \n\n\n//SLIDER\n\n//-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_FILE DETAILS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_//\n// The actual slider bar. \n","import React, { Component } from 'react'\nimport styled from \"styled-components\"\nimport {inverseLogslider} from \"services/general/logorithmic_functions\"\n\n class MiniRangeBarValue extends Component {\n    state = {\n        valueAsInput: false,\n    }\n\n    setLocalRangeAndLogValue = (e) => {\n        \n        const inverseLogValue = inverseLogslider(e.target.value).toFixed()\n\n        this.props.setIncome(e.target.name, e.target.value, inverseLogValue, this.props.rangeBarProps)\n    }\n    //state decides whether the label should be shown as an input or just a regular number. \n\n    toggleState = ()=> {\n        const show = this.state.valueAsInput\n        this.setState({\n            valueAsInput: !show\n        })\n    }\n    //When clicked the value will toggle between being an input or not. \n    \n    handleKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            this.setState({\n                valueAsInput: false,\n            })\n        }\n      }\n\n      //If the user presses enter the new value will be submitted and it will turn from input back to regular number. \n\n    render() {\n     \n        return (\n            <Wrapper>\n\n             <Value onClick={this.toggleState}\n             >{\n                 this.props.rangeBarProps.numberType === \"percentage\" ?\n                 `${(this.props.rangeBarProps.rangeBarValue*100).toFixed(1)} %` :\n                 this.props.rangeBarProps.rangeBarValue\n                }</Value>\n            \n            </Wrapper>\n           \n        )\n    }\n}\n\n\nexport default MiniRangeBarValue\n\n//-----------------------------------------------style-----------------------------------------------//\n\nconst Wrapper = styled.div`\n    display: felx;\n    justify-content: center;\n`\n\nconst sharedStyles = `\n    position: relative;\n    border-radius: 3px;\n    padding: .4rem;\n    height: 2.6rem;\n    width: 6rem;\n    align-content: center;\n    text-align: center;\n    color: white;\n    border: none;\n`\n const Value = styled.div`\n         ${sharedStyles}\n        background: ${props => props.theme.color.slate};\n        font-size: ${props =>props.theme.fontSize.small};\n        &:before {\n            content: \"\";\n            height: 1rem;\n            width: 1rem;\n            background: ${props => props.theme.color.slate};\n            position: absolute;\n            transform: rotate(45deg);\n            left: 40%;\n            top: -20%;\n        };\n        &:focus {\n           border-bottom: 3px solid ${props => props.theme.color.sandy};\n           \n        }\n`\n\n//-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_FILE DETAILS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_//\n//THe value is displayed as either a regular number or an input when clicked which will change the number. \n\n\n","import React, { Component } from 'react'\nimport styled from \"styled-components\"\n\nclass MiniRangeBarSlider extends Component {\n\n\n\n    render() {\n      \n        return (\n            <Wrapper>\n            <Input\n                type=\"range\"\n                name={this.props.rangeBarProps.name}\n                onChange={(e) => this.props.setValue(+e.target.value, +e.target.value, this.props.rangeBarProps)}\n                value={this.props.rangeBarProps.rangeBarValue}\n                max={this.props.rangeBarProps.max}\n                min={this.props.rangeBarProps.min}\n                step={this.props.rangeBarProps.step}\n                percentage={`${((this.props.rangeBarProps.rangeBarValue-this.props.rangeBarProps.min)/(this.props.rangeBarProps.max-this.props.rangeBarProps.min))*100}%`}\n            />\n            </Wrapper>\n        )\n    }\n}\n//renders the slide bar. Percentage is calcuated here and pass to styled components to have the slide bar be \n//two different colors as it moves. \n\n\nexport default MiniRangeBarSlider\n\n//-----------------------------------------------style-----------------------------------------------//\n\n\nconst Wrapper = styled.div`\n   text-align: center;\n`\n\nconst Input = styled.input`\n\n    width: 12rem;\n    height: 3px;\n    -webkit-appearance: none;\n    background: linear-gradient(90deg, \n        ${props => props.theme.color.salmon} ${props => props.percentage}, \n        ${props => props.theme.color.drab} ${props => props.percentage});\n    outline: none;\n    opacity: 0.7;\n    -webkit-transition: 0.2s;\n    border-radius: 12px;\n    margin-top: 1rem;\n    margin-bottom: 2rem;\n    transition: all 1s ease;\n\n&::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    appearance: none;\n    width: 12px;\n    height: 12px;\n    background: ${props => props.theme.color.drab};\n    border-radius: 50%;\n    cursor: pointer;\n}\n\n&:active::-webkit-slider-thumb\n{\n    background: ${props => props.theme.color.salmon};\n}\n\n`\n","import React, { useEffect } from 'react'\nimport styled from \"styled-components\"\nimport MiniRangeBarLabel from \"ui/miniRangeBar/Components/MiniRangeBarLabel\"\nimport MiniRangeBarValue from \"ui/miniRangeBar/Components/MiniRangeBarValue\"\nimport MiniRangeBarSlider from \"ui/miniRangeBar/Components/MiniRangeBarSlider\"\n\n\n/*Props Required to be passed:\n1. setIncome \n      a function that receives a name, rangebar value and the range bar props and\n      uses those variables to pass into the action and set the reducer. \n2. rangeBarProps\n     This is an object containing the item name, id, label, and rangebar value. The mini range Bar also required a min, max and step\n     as well as a number types which will determine if it will display a percentage or a normal number. \n*/ \n\nconst miniRangeBar = ({rangeBarProps,handleChangeLabel, setValue }) =>  {\n        return (\n            < RangeBarWrapper>\n                <MiniRangeBarLabel\n                     rangeBarProps={rangeBarProps}\n                     handleChangeLabel={handleChangeLabel}\n                />\n                <MiniRangeBarSlider\n                     rangeBarProps={rangeBarProps}\n                     setValue={setValue}\n                />\n                <MiniRangeBarValue\n                    rangeBarProps={rangeBarProps}\n                    setValue={setValue}\n                />\n               \n            </RangeBarWrapper>\n        )\n}\n\nexport default miniRangeBar\n//-----------------------------------------------style-----------------------------------------------//\n\nconst RangeBarWrapper = styled.div`\n    margin-top: 1rem;\n    padding-left: 2rem;\n    width: 20rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    position: relative;\n\n`\n//-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_FILE DETAILS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_//\n// This is the entire rangebar wrapper that contains the label, the range bar input and the value output. \n","import React from 'react'\nimport styled from \"styled-components\"\nimport MiniRangeBar from \"ui/miniRangeBar/MiniRangeBar\"\n\nexport default function PensionIncomeStartAges( {setPensionIncome, pensionStartAges_reducer, count}) {                                            //Use Destructing to assign variables and functions\n   \n    pensionStartAges_reducer = Object.values(pensionStartAges_reducer)                                                                    //Converts pensionStartAges_reducer to an array so they can be mapped through to render mini rangeBars                                                          \n \n    return (\n        <Wrapper>                                                                                                                         {/* This walks through the pensionStartAges_reducer provided from the reducer and rendersa miniRangeBar for each */}\n            {\n                    count > 3 ? \n                pensionStartAges_reducer.slice(0,2).map(d => <MiniRangeBar\n                                            id={d.name}\n                                            key={d.name}\n                                            setValue={setPensionIncome}                                                        //Function Defined Above, sets the age in the reducer\n                                            rangeBarProps={d}                                                                            //We pass in the entire object as rangeBarProps to have access to all it's properties throughout the cycle\n                    />)\n           : null }\n        </Wrapper>                            \n    )\n}\n//-----------------------------------------------style-----------------------------------------------//\n\n\nconst Wrapper= styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    margin-top: 2rem;\n    height: 25rem;\n    width: 40rem;\n`\n//-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_FILE DETAILS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_//\n/*\n\nThis component renders the MiniRangeBars on the bottom right of the Control panel. These range bars change the pension start ages such as\nCPP, OAS, and rrsp ages at which the user would begin collecting pension. There is also one rangebar that changes the interest rate return of the\nRRSP savings.\n\n*/","import React from 'react'\nimport RangeBar from \"ui/rangeBar/RangeBar\"\nimport styled from \"styled-components\"\n\n\n\n\nconst DesiredRetirementIncome = ({ setReccomendedRetirementIncome, user_reducer, count }) => {                           //Uses Destructing to assign variables and functions needed for this function                                                \n\nconst {retirementIncome} = user_reducer\n\n    return (\n        <Wrapper>            \n                       {\n                    count > 4 ?                                                   \n            <RangeBarWrapper>\n                 <RangeBar                                                                                    //Mapping through the types of income to render a rangeBar for Each                                                 \n                                                    rangeBarProps={retirementIncome}\n                                                    setValue={setReccomendedRetirementIncome}\n                                                    />\n             </RangeBarWrapper>\n                : \n                null \n                \n                }\n        </Wrapper>                            \n    )\n\n}\n\nexport default  DesiredRetirementIncome\n//-----------------------------------------------style-----------------------------------------------//\n\n\nconst Wrapper= styled.div`\nmargin-top: 2rem;\n`\n\nconst RangeBarWrapper = styled.div`\n  overflow: hidden;\n  position: relative;\n  text-align: center;\n`\n\n//-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_FILE DETAILS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_//\n/*\n    This enables the user to input their income. They select an age range for the years in which they would like to input\n    their income. Once they've selected the range they slide the range bars to change the value of the income and it fills\n    into the reducer showing on the chart. There is an add item box which enables them to add new sources of income. \n\n\n*/ \n\n","import {createGlobalStyle} from \"styled-components\"\n\n\n//like #1995AD\nexport const lightTheme = {\n    color: {\n        ice: \"#FCFCFC\",\n        blue: \"#63bbcf\",\n        lightGrey: \"#cbcbcb\",\n        darkGrey: \"#7f7f7f\",\n        slate: \"#536D7A\",\n        turquoise: \"#4BB9D0\",\n        drab: \"#324755\",\n        sandy: '#ffd152',\n        green: '#8CB8B7',\n        steelBlue: '#3B7B8E',\n        onyx: '#485056',\n        salmon: '#F29278',\n        darkSalmon: '#F07655',\n    },\n    fontSize: {\n        smallest: \"1rem\",\n        small: \"1.3rem\",\n        smallMedium: \"1.6rem\",\n        medium: '2rem',\n        mediumLarge: '3.2rem',\n        large: '4.2rem',\n        large2: '6.2rem',\n        largest: '8.8rem',\n    },\n    text: {\n        primaryHeading: `\n            font-size: 3rem,\n            color: red\n        `\n    },\n    border: {\n        primary: \"1px solid #DCDCDC\",\n    },\n    flexContent: {\n        center: '{display: flex; align-items: center; justify-content:center}'\n    },\n    boxShadow: {\n        small: \"9px 9px 10px -7px rgba(102,99,102,1);\",\n        lifted: \"11px 11px 22px -7px rgba(102,99,102,1);\",\n    },\n    linearGradient: {\n        primary: \"-webkit-gradient(linear, left bottom, right top, color-stop(0%, rgba(29,37,41,1)), color-stop(100%, rgba(0,110,110,1)))\",\n    },\n    pageBaseStyles: `{\n        margin-top: 5rem;\n        display: grid;\n        padding: 1rem;\n        margin: 0 auto;\n        height: 80rem;\n        width:  120rem;\n        background: white;\n    }`\n\n}\n\nexport const setFlex = ({align=\"center\",justify=\"center\"}) => {\n    return `\n        display:flex;\n        align-items:${align};\n        justify-content:${justify}\n    `\n}\n\nexport const buttonStyles = `\n    padding: 1rem 2rem 1rem 2rem;\n    min-width: 12rem;\n    width: auto;\n    height: 5rem;\n    margin: 1rem;\n    cursor: pointer;\n    outline: none;\n    border-radius: 5rem;\n    text-transform: uppercase;\n    position: relative;\n    font-size: 1.4rem;\n`\n\nexport const pageBaseStyles = `\ngrid-area: \nmargin-top: 5rem;\ndisplay: grid;\nmargin: 0 auto;\nheight: 90vh;\nwidth:  80vw;\nbackground: white;\n`\nexport const GlobalStyles = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css?family=Lato:100,300,400,700&display=swap');\n*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\nbody {\n   font-size: 100%;\n   background: #fff;\n   font-family: 'Muli', sans-serif;\n}\nhtml {\n   @media (min-width: 0px) {\n       font-size: 12.5%;\n   }\n   @media (min-width: 200px) {\n       font-size: 32.5%;\n   }\n   @media (min-width: 400px) {\n       font-size: 37.5%;\n   }\n   @media (min-width: 600px) {\n       font-size: 42.5%;\n   }\n   @media (min-width: 1000px) {\n       font-size: 47.5%;\n   }\n   @media (min-width: 1200px) {\n       font-size: 52.5%;\n   }\n   @media (min-width: 1400px) {\n       font-size: 57.5%;\n   }\n   @media (min-width: 1500px) {\n       font-size: 67.5%;\n   }\n   @media (min-width: 1700px) {\n       font-size: 72.5%;\n   }\n}\n`\n","import React from 'react'\nimport styled from \"styled-components\"\nimport {buttonStyles} from \"style/Themes\"\n\nconst ButtonDark = ({onClick, text}) => {\n    return (\n        <ButtonComponent\n            onClick={onClick}\n        >\n            {text}\n        </ButtonComponent>\n    )\n}\n\n\n\nexport default ButtonDark\n\n//-----------------------------------------------style-----------------------------------------------//\n\n\nconst ButtonComponent = styled.button`\n    ${buttonStyles};\n    color: ${props => props.theme.color.ice};\n    background: ${props => props.theme.color.slate};\n`\n\n//-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_FILE DETAILS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_//\n/* Used to open the AddNewItem container or submit the details gathered to the reducer. \nCurrently this button is local to the NetWorth App but it could be placed in the UI \nfolder and be global to the entire app.  */","import React from 'react'\nimport styled from \"styled-components\"\nimport {buttonStyles} from \"style/Themes\"\n\nconst Button = ({text, backward, forward, onClick}) => {\n    return (\n\n        text ?\n        <ButtonComponent\n             onClick={onClick}\n        >\n          {text}\n\n        </ButtonComponent>\n        :\n        backward ?\n        <ButtonComponent\n        onClick={onClick}\n         >\n            &#10094;\n            &#10094;\n        </ButtonComponent>\n        :\n        forward ?\n        <ButtonComponent\n        onClick={onClick}\n            >\n            &#10095;\n            &#10095;\n        </ButtonComponent>\n        :\n        null\n\n\n    )\n}\n\n\n\nexport default Button\n\n//-----------------------------------------------style-----------------------------------------------//\n\n\nconst ButtonComponent = styled.button`\n    ${buttonStyles};\n    background: ${props => props.theme.color.ice};\n    color: ${props => props.theme.color.slate};\n`\n","import React, {useState} from 'react'\nimport styled from \"styled-components\"\nimport IncomeInput from \"pages/income/components/IncomeInput\"\nimport PensionIncomeStartAges from \"pages/income/components/PensionIncomeStartAges\"\nimport DesiredRetirementIncome from \"pages/income/components/DesiredRetirementIncome\"\nimport ButtonDark from \"ui/buttons/ButtonDark\"\nimport ButtonLight from \"ui/buttons/ButtonLight\"\nimport { NavLink} from \"react-router-dom\"\n\nexport default function ControlPanel(props) {\n\n    const {\n        rrsp: {financialValue: rrsp },\n        tfsa: {financialValue: tfsa },\n        oasIncome: {financialValue: oasIncome },\n        nonRegistered: {financialValue: nonRegistered },\n   } = props.income_reducer[75]            \n\n   \n    const [count, setCount] = useState(oasIncome > 0 ? 8 : 0);\n\n        return (\n                    <ControlPanelWrapper>\n                        <Dialogue>\n                            {\n                                count > 7 ? \n                               null\n                                :\n                                < ButtonLight backward onClick={() => setCount(count > 0 ? count - 1 : 0)}/>\n                            }\n                                <Text>\n                                    {\n                                     count === 0 ?  <div>\n                                                        <h5>We're going to estimate your pension income by reviewing your lifetime income by year. </h5>  \n                                                        <span>Use the arrow buttons to move through the tutorial</span> \n                                                   </div>\n  \n                                     : \n                                     count === 1 ?   <div>\n                                                         <h5>This selector enables you to choose the age range in which you'd like to input income </h5>  \n                                                    </div>\n                                     : \n                                     count === 2 ?  <div>\n                                                        <h5>Input your past earnings per year and estimate your future earnings. </h5>  \n                                                    </div>\n                                      : \n                                     count === 3 ?   <div>\n                                                        <h5>You can add as many income steams as you like. </h5>  \n                                                    </div>\n                                     :\n                                     count === 4 ?   <div>\n                                                        <h5>Your CPP and OAS payments either increase or decrease depending when you decide to start.</h5>  \n                                                    </div>\n                                    :\n                                     count === 5 ?   <div>\n                                                        <h5>Input the amount of income you'd like in retirement.</h5>  \n                                                    </div>\n                                    :\n                                     count === 6 ?   <div>\n                                         {\n                                             nonRegistered > 1000 ? \n                                                     <h5>{`By drawing $${rrsp/1000}k from your RRSP, $${tfsa/1000}k from your TFSA and  $${nonRegistered/1000}k from your Non-Registered accounts you'll minimuze your taxes both before and after retirement.`}</h5>  \n                                                    :\n                                                     <h5>{`By drawing $${rrsp/1000}k from your RRSP and $${tfsa/1000}k from your TFSA you'll minimize your taxes both before and after retirement.`}</h5>  \n                                         }\n   \n                                                    </div>\n                                    :\n                                     count === 7 ?   <div>\n                                                        Next, we build your savings plan.\n                                                        <ButtonWrapper to=\"/SavingsPlan\">\n                                                            <ButtonDark text={'Next'} onClick={() => setCount(0)}/>\n                                                        </ButtonWrapper>\n                                                    </div>\n                                     : null\n\n                                }\n                                </Text>\n                                {\n                                count > 7 ? \n                                null\n                                :\n                                < ButtonLight forward onClick={() => setCount(count  < 10 ? count + 1 : 0)}/>\n                            }\n                          \n                        </Dialogue>\n     <Sections>\n                            <Section>\n\n                            <IncomeInput\n                                {...props}     \n                                count={count}                                                                                     //  All props are passed through to the child component\n                                />\n                            </Section>\n                    \n                            <Section>\n                                <DesiredRetirementIncome\n                                {...props}\n                                count={count}      \n                                />\n                            </Section>\n                            <Section>\n            \n                                <PensionIncomeStartAges\n                                {...props}\n                                count={count}      \n                                />\n                        </Section>\n                        {\n                            count > 7 ? \n                            <TutorialButtonWrapper>\n                                < ButtonLight text = {\"Tutorial\"} onClick={() => setCount(0)}/>\n                                <ButtonWrapper to=\"/SavingsPlan\">\n                                                            <ButtonDark text={'Next'} onClick={() => setCount(0)}/>\n                                                        </ButtonWrapper>\n                            </TutorialButtonWrapper>\n                         \n                            : null\n                        }\n                        </Sections> \n\n                \n                </ControlPanelWrapper>\n        )\n          \n    }\n\n\n//-----------------------------------------------style-----------------------------------------------//\n\nconst ControlPanelWrapper = styled.div`\n    grid-area: c;\n    display: flex;\n    flex-direction: column;\n    color: ${props => props.theme.color.slate};\n    border-top: ${props => props.theme.border.primary};\n    padding-top: 2rem;\n    margin-left: 3rem;\n    margin-right: 3rem;\n    position: relative;\n`\n\nconst Dialogue = styled.div`\n    display: flex;\n    justify-content: space-around;\n    height: 5rem;\n    width: 100%;\n    margin-bottom: 1rem;\n`\nconst Sections = styled.div`\n    display: flex;\n`\nconst Section = styled.div`\n    flex: 1;\n`\nconst Text = styled.div`\n    flex: 1;\n    font-size: 2.4rem;\n    text-align: center;\n    font-weight: 700;\n    & span {\n        margin-top: 1rem;\n        font-size: 1.6rem;\n        font-weight: 400;\n        font-style: italic;\n    }\n`\n\nconst ButtonWrapper = styled(NavLink)`\n\n`\nconst TutorialButtonWrapper = styled.div`\nposition: absolute;\ntop: 30rem;\nright: 3rem;\n\n`\n\n/*\n\nheaders\n\n                            <h2>Estimate Lifetime Earnings</h2>\n                                        <h2>Desired Retirement Income</h2>\n                                                        <h2>Select Retirement Age</h2>\n*/","import {createSelector} from \"reselect\"\n\n\nconst income_reducer = state => state.income_reducer\n\nexport const stackedChartData = createSelector(\n    [income_reducer],\n    (income_reducer) => Object.values(income_reducer).map(d => {                                                                  //the year list needs to be converted to an array so the chart can render the data\n        const incomeNamesArray = Object.keys(d)                                                                                                 //Creates an array of all the names eg [\"employmentIncome\", \"cppIncome\", etc.]\n        const financialValueArray = Object.values(d).map(a => a.financialValue)                                                                 //Creates an array of all the financial Values eg [\"22000\", \"1200\", etc.]\n        var result = {age: d.cppIncome.age};                                                                                                    //I have to go into one of the objects to access its age which acts like id, I just used cppIncome because it wont be deleted\n        incomeNamesArray.forEach((key, i) => result[key] = financialValueArray[i]);                                                             //Merges the two arrays into a set of key value pairs eg [\"employmentIncome\": 22000]   \n        return result\n    }))\n\nexport const stackedChartKeys = createSelector(\n    [income_reducer],\n    (income_reducer) => Object.keys(income_reducer[18])                                                                            //creates a an array of each of the income type names, which is used in the stacked Income chart\n)\n\nexport const legenChartKeys = createSelector(\n    [income_reducer],\n    (income_reducer) => Object.keys(income_reducer[18])                                                                            //creates a an array of each of the income type names, which is used in the stacked Income chart\n)\n\n\nexport const retirementPensionIncome = createSelector(                                                                                           //Sums all sources of retirement income that does not include RRSP, TFSA or NON registered\n    [income_reducer],\n    (income_reducer) => Object.values(income_reducer[72]).filter(d => d.name !== \"rrsp\")\n                                                .filter(d => d.name !== \"tfsa\")\n                                                .filter(d => d.name !== \"nonRegistered\")\n                                                .map(d => d.financialValue)\n                                                .reduce((acc,num) => acc + num)                                                                       \n)\n\n\n\n\n//HEADER SELECTORS\n","import React, { Component } from 'react'\nimport * as d3 from \"d3\"\nimport _ from \"lodash\"\nimport styled from \"styled-components\"\nimport {stackedChartData, stackedChartKeys} from \"redux/income/income_selectors\"\nimport {connect} from \"react-redux\"\n\nconst drawChart = (props, width, height) => {\n\n    //KEY VALUES\n    const margin = {top: 20, right: 100, bottom: 50, left: 100}\n    const graphHeight = height - margin.top - margin.bottom\n    const graphWidth = width - margin.left - margin.right\n    const color = [\"#ef7959\", \"#4BB9D0\",'#72929B',  \"#B0CFE3\", '#FEDE76', '#81CCAF',  '#78b7bb','#D4D4D4','#72929B', \"#F29278\", '#FEDE76', \"#a4d7e1\", \"#81CCAF\", '#F7CDAB', '#D8BABB'];\n    const data = props.stackedChartData\n\n   //VALUE ACCESSORS\n//    const xValue = d => d.age\n//    const yValue = d => d.country\n\n\n    d3.select(\".canvasStackedbarChart > *\").remove()\n    d3.select(\".tooltip\").remove()\n\n\n    const svg = d3.select('.canvasStackedbarChart')\n                                .append(\"svg\")\n                                .attr(\"viewBox\", `0 0 ${width} ${height}`)\n\n\n    const graph = svg.append(\"g\").attr(\"height\", graphHeight)\n                                 .attr(\"width\", graphWidth)\n                                 .attr(\"transform\", `translate(${margin.left}, ${margin.top})`)\n                                 .style(\"background\", \"blue\")\n                               \n    const stack = d3.stack()\n                                .keys(props.stackedChartKeys)\n                                .order(d3.stackOrderNone)\n                                .offset(d3.stackOffsetNone);\n        \n    const tooltip = d3.select(\".canvasStackedbarChart\").append(\"div\")\n                                .attr(\"class\", \"tooltip\")\n                                .style(\"opacity\", 0)\n                                .style(\"position\", \"absolute\")\n                                .style(\"top\", 0)\n                                .style(\"left\", 0)\n        \n    \n    const update = data => {\n    \n        const d3Max = d3.max(data, d =>  Object.values(d).reduce((acc,num) => acc + num) ) < 90000 ? 90000 : \n                        d3.max(data, d => Object.values(d).reduce((acc,num) => acc + num)) + 10000\n\n        const series = stack(data);\n        const yScale = d3.scaleLinear().range([graphHeight, 0]).domain([0, d3Max])\n        const xScale = d3.scaleBand().range([0, graphWidth]).paddingInner(0.2).paddingOuter(0.3)\n        .domain(data.map(item => item.age))\n     \n////-------------------------PROTECT--------------------------------        \n\n    const layers = graph.append(\"g\").selectAll(\"g\")\n                                            .data(series).enter().append(\"g\").attr(\"fill\", (d,i) => color[i])\n                                            .attr(\"backgroundColor\", (d,i) => color[i])\n                                            .attr(\"class\", (d,i) => (\n                                                d.key === \"cppIncome\" ? \"CPP Income\" \n                                                :\n                                                d.key === \"oasIncome\" ? \"OAS Income\" \n                                                :\n                                                d.key === \"tfsa\" ? \"Reccomended TFSA Income\" \n                                                :\n                                                d.key === \"rrsp\" ? \"Reccomended RRSP Income\" \n                                                : \n                                                d.key === \"nonRegistered\" ? \"Reccomended Non-Registered Income\" \n                                                : \n                                                d.key))\n\n    const rects = layers.selectAll(\"rect\").data(d => d).enter().append(\"rect\")\n                                            .attr(\"x\", (d,i) => xScale(d.data.age))\n                                            .attr(\"y\", d => yScale(d[1]))\n                                            .attr(\"height\", d => yScale(d[0]) > 0 ? yScale(d[0]) - yScale(d[1]) : 0)\n                                            .attr(\"width\", xScale.bandwidth())\n                                    \n\n      rects.on(\"mouseover\", (d,i,n) => {\n                                const name = n[0].parentNode.className.animVal\n                                const nameIndex = props.stackedChartKeys.findIndex(type => type === name)\n                                const thisColor = color[nameIndex]\n                                const thisYearTotalIncome = Object.values(data[i]).slice(1).reduce((acc, num) => acc + num)\n                                d3.select(n[i])\n                                    .transition()\n                                        .duration(100)\n                                        .attr(\"opacity\", 0.7)\n                                        .attr(\"cursor\", \"pointer\")\n                            \n                                        tooltip.transition()\n                                        .duration(200)\n                                        .style(\"opacity\", 1)\n                                        .style(\"pointer-events\", \"none\")\n\n                                        tooltip.html(\n                                            `\n                                            <div class=\"topHeader\">\n                                                <p> ${(d.data.age)} Yrs Old</p>\n                                                <p>  Year ${(d.data.age + 1988)} </p>\n                                            </div>\n                                            <div class=\"financialOutput\">\n                                                <div class=\"total\" style=\"color: ${thisColor}; \">\n                                                    <h3 class=\"title\">  ${_.startCase(name)} </h3>\n                                                    <p class=\"value\" style=\"border-bottom: .3px solid #72929B; border-left: .3px solid #72929B;\">  \n                                                        ${(d[1] - d[0])/1000} \n                                                        <span> K</span>\n                                                    </p>\n                                                </div>\n                                                <div class=\"total\">\n                                                    <h3 class=\"title\">  Total Income </h3>\n                                                    <p class=\"value\" style=\"border-left: .3px solid #72929B;\">  \n                                                        ${thisYearTotalIncome/1000} \n                                                        <span> K</span>\n                                                    </p>\n                                                </div>\n                                            </div>\n                                            `\n                                        )\n                                        \n                                    })\n                                    .on(\"mouseout\", (d,i,n) => {d3.select(n[i])\n                                        .transition()\n                                        .duration(100)\n                                        .attr(\"opacity\", 1)\n                            \n                                        tooltip.transition()\n                                        .duration(100)\n                                        .style(\"opacity\", 0)   \n                                            })\n                                    .on('mousemove', function(d) { // when mouse moves                  \n                                            tooltip.style('top', (d3.event.layerY - 20) + 'px') // always 10px below the cursor\n                                                .style('left', (d3.event.layerX + 30) + 'px'); // always 10px to the right of the mouse\n                                            });\n                        \n            var ticks = [20,40, 60, 80, 95];\n            var tickLabels = ['Age 20','Age 40','Age 60','Age 80','Age 95']\n\n//AXIS \nconst xAxisGroup = graph.append(\"g\")\n.attr(\"transform\", `translate(0, ${graphHeight})`)\n.attr(\"class\", \"axis\")\n\nconst yAxisGroup = graph.append(\"g\")\n.attr(\"class\", \"axis\")\n\n            const xAxis = d3.axisBottom(xScale)\n                            .tickValues(ticks)\n                            .tickFormat(function(d,i){ return tickLabels[i] })\n                           \n                                    \n            const yAxis = d3.axisLeft(yScale).ticks('3')\n                            .tickFormat(d => `${d/1000}k`)\n\n           // const colorScale = d3.scaleOrdinal().domain(props.stackedChartKeys).range(color)\n\n        xAxisGroup.call(xAxis)\n        yAxisGroup.call(yAxis)\n        const legendGroup = graph.append('g')\n        .attr(\"transform\", `translate(${graphWidth + 20}, ${140})`)\n\n      const uselessFunctionToClearUnusedNames = () => {\n          return legendGroup\n      }\n      uselessFunctionToClearUnusedNames()\n    }\n \n\n    update(data)\n    \n}\n\nclass StackedBarChartLifetimeIncome extends Component {\n\n    state = {\n        elementWidth: 0,\n        elementHeight: 0\n    }\n\n    updateSize = () => {\n        this.setState({ \n            elementWidth: this.divRef.clientWidth, \n            elementHeight: this.divRef.clientHeight, \n        });\n        drawChart(this.props, this.state.elementWidth, this.state.elementHeight )\n      }\n\ncomponentDidMount() {\n    this.setState({ \n        elementWidth: this.divRef.clientWidth, \n        elementHeight: this.divRef.clientHeight \n    });\n    drawChart(this.props, this.state.elementWidth, this.state.elementHeight)\n}\n\ncomponentDidUpdate() {\n    drawChart(this.props, this.state.elementWidth, this.state.elementHeight)\n}\n\ncomponentWillUnmount() {\n    window.removeEventListener('resize', this.updateSize);\n   }\n   \n    render() {\n\n        window.addEventListener('resize', this.updateSize)\n \n        return (\n            <Canvas className=\"canvasStackedbarChart\" ref={canvasStackedBarChart => this.divRef = canvasStackedBarChart}>\n                \n            </Canvas>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        stackedChartData: stackedChartData(state),\n        stackedChartKeys: stackedChartKeys(state)\n    }\n}\n\nexport default connect(mapStateToProps)(StackedBarChartLifetimeIncome)\n\n//-----------------------------------------------style-----------------------------------------------//\n\nconst Canvas = styled.div`\n        width: 100%;\n        height: 100%;\n        position: relative;\n\n`","\nexport const calculateFutureValue = (rate, n, pmt, pv) => {\n  const FutureValue = pmt * (Math.pow((1+rate), n) - 1)/rate + pv * Math.pow((1+rate), n)\n  return FutureValue\n}\n\nexport const financeFV = (r, cf0, numOfPeriod) => {\n  let rate = r/100, fv;\n  fv = cf0 * Math.pow((1 + rate), numOfPeriod);\n  return Math.round(fv * 100) / 100;\n};\n\n\n\nconst RRIFMinimumTable = {\n    46:\t0.025,\n    47:\t0.026,\n    48:\t0.026,\n    49:\t0.027,\n    50:\t0.025,\n    51:\t0.026,\n    52:\t0.026,\n    53:\t0.027,\n    54:\t0.028,\n    55:\t0.029,\n    56:\t0.029,\n    57:\t0.030,\n    58:\t0.031,\n    59:\t0.032,\n    60:\t0.033,\n    61:\t0.034,\n    62:\t0.036,\n    63:\t0.037,\n    64:\t0.038,\n    65:\t0.04,\n    66:\t0.0417,\n    67:\t0.0435,\n    68:\t0.0455,\n    69:\t0.0476,\n    70:\t0.0500,\n    71:\t0.0528,\n    72:\t0.0540,\n    73:\t0.0553,\n    74:\t0.0567,\n    75:\t0.0582,\n    76:\t0.0598,\n    77:\t0.0617,\n    78:\t0.0636,\n    79:\t0.0658,\n    80:\t0.0682,\n    81:\t0.0708,\n    82:\t0.0738,\n    83:\t0.0771,\n    84:\t0.0808,\n    85:\t0.0851,\n    86:\t0.0899,\n    87:\t0.0955,\n    88:\t0.1021,\n    89:\t0.1099,\n    90:\t0.1192,\n    91:\t0.1306,\n    92:\t0.1449,\n    93:\t0.1634,\n    94:\t0.1879,\n    95: 0.2,\n}\n\n\nexport const calculateRRIFPaymentTable = (age, balance, returnOnInvestment) => {\n    const withdrawalTable = [\n\n    ]\n    for (let i = 0; i < (96-age); i++) {\n\n        if (withdrawalTable.length < 1) {\n\n            const rate = RRIFMinimumTable[age]\n            const startingBalance = balance * (1 + returnOnInvestment)\n            const withdrawal = startingBalance * rate\n\n            withdrawalTable.push({\n                age: age,\n                startingBalance: startingBalance,\n                rate: RRIFMinimumTable[age],\n                withdrawal: Math.round(withdrawal/1000)*1000,\n                endingBalance: startingBalance - withdrawal, \n                \n            })\n        }\n        else {\n            const startingBalance = withdrawalTable[i - 1].endingBalance * (1 + returnOnInvestment)\n            const rate = RRIFMinimumTable[i + age]\n            const withdrawal = startingBalance * rate\n            const endingBalance = startingBalance - withdrawal\n\n            withdrawalTable.push({\n                age: i + age,\n                startingBalance: Number(startingBalance.toFixed()),\n                rate: rate,\n                withdrawal: Math.round(withdrawal/1000)*1000,\n                endingBalance: Number(endingBalance.toFixed()), \n            })\n        }\n    }\n    return withdrawalTable\n}\n\n\n\n\nexport const adjustCPP = (income, age) => {\n  if (age < 65) {\n     const years = 65 - age \n     const percentage = years * .072\n     const value = income * (1-percentage)\n     return value\n  }\n  else if (age === 65) {return income}\n\n  else if (age > 65) {\n      const years = age -65\n      const percentage = years * .072\n      const value = income * (1 + percentage)\n      return value\n   }\n}\nexport const adjustOAS = (income, age) => {\n  if (age === 65) {return income}\n\n  else if (age > 65 && age < 70) {\n      const years = age -65\n      const percentage = years * .072\n      const value = income * (1 + percentage)\n      return value\n   }\n\n   if (age >= 70) {return income * 1.36}\n}\n\n\n\nexport function abbreviateNum(number) {\n    // 2 decimal places => 100, 3 => 1000, etc\n    number = number < 1000 ? 0 : number\n    let decPlaces = number < 1000000 ? 1 : 2\n\n    decPlaces = Math.pow(10,decPlaces);\n\n    // Enumerate number abbreviations\n    var abbrev = [ \" K\", \" M\", \" B\", \"T\" ];\n\n    // Go through the array backwards, so we do the largest first\n    for (var i=abbrev.length-1; i>=0; i--) {\n\n        // Convert array index to \"1000\", \"1000000\", etc\n        var size = Math.pow(10,(i+1)*3);\n\n        // If the number is bigger or equal do the abbreviation\n        if(size <= number) {\n             // Here, we multiply by decPlaces, round, and then divide by decPlaces.\n             // This gives us nice rounding to a particular decimal place.\n             number = Math.round(number*decPlaces/size)/decPlaces;\n\n             // Handle special case where we round up to the next abbreviation\n             if((number === 1000) && (i < abbrev.length - 1)) {\n                 number = 1;\n                 i++;\n             }\n\n             // Add the letter for the abbreviation\n             number += abbrev[i];\n\n             // We are done... stop\n             break;\n        }\n    }\n\n    return number;\n}\n\n\nexport const presentValue = function (rate, periods, payment, future, type) {\n\n    var paymentType = (typeof type === 'undefined') ? 0 : type;\n\n    if (rate === 0) {\n      return - payment * periods - future;\n    } else {\n      return (((1 - Math.pow(1 + rate, periods)) / rate) * payment * (1 +rate * paymentType) - future) / Math.pow(1 + rate, periods);\n    }\n  }\n\n export const payment  = function(rate, nperiod, pv, fv, type) {\n      if (!fv) fv = 0;\n      if (!type) type = 0;\n  \n      if (rate === 0) return -(pv + fv)/nperiod;\n  \n      var pvif = Math.pow(1 + rate, nperiod);\n      var pmt = rate / (pvif - 1) * -(pv * pvif + fv);\n  \n      if (type === 1) {\n          pmt /= (1 + rate);\n      };\n  \n      return Math.round(pmt)\n  }\n","import {payment}from \"services/general/financial_functions\"\n\nconst historicRRSP = {\n    1990: 63889,\n    1991: 69444,\n    1992: 69444,\n    1993: 75000,\n    1994: 80556,\n    1995: 86111,\n    1996: 75000,\n    1997: 75000,\n    1998: 75000,\n    1999: 75000,\n    2000: 75000,\n    2001: 75000,\n    2002: 75000,\n    2003: 86111,\n    2004: 91667,\n    2005: 100000,\n    2006: 105556,\n    2007: 111111,\n    2008: 116667,\n    2009: 122222,\n    2010: 124722,\n    2011: 127611,\n    2012: 132333,\n    2013: 134833,\n    2014: 138500,\n    2015: 140944,\n    2016: 144500,\n    2017: 145722,\n    2018: 147222,\n    2019: 151278,\n    2020: 154611,\n};\n\n\n\n\nexport const calculateStartValue = (age, account, state) => {\n    return state[age-1][account].endValue\n\n}\nexport const calculateEndValue = (startValue, age, account,state) => {\n    const {contribution, percentageReturn, withdrawal} = state[age][account]\n    return  startValue * (1 + percentageReturn) + contribution - withdrawal\n\n}\n\nexport const calculateOptimumIncomeStreams = (retirementIncome, pensionIncome, maxRrspPayment, maxTfsaPayment, highestIncomes) => {\n\n        if (highestIncomes < 47000) {\n            const incomeLessPension = retirementIncome - pensionIncome > 0 ? retirementIncome - pensionIncome : 0                                                              //this is the difference between the income they would like and what they are recieving from pensions\n            const tfsaIncome = incomeLessPension > maxTfsaPayment ? maxTfsaPayment : incomeLessPension * .7                              //Their first goal should be to draw income from TFSA because of their lower tax bracket\n            const taxAdvantagedDifferentialLessTfsa = incomeLessPension - tfsaIncome\n            const rrspIncome = taxAdvantagedDifferentialLessTfsa > maxRrspPayment ? maxRrspPayment : taxAdvantagedDifferentialLessTfsa \n    \n            const nonRegistered = taxAdvantagedDifferentialLessTfsa - rrspIncome\n            return  {\n                rrsp: rrspIncome > 0 ? rrspIncome : 0,\n                tfsa: tfsaIncome > 0 ? tfsaIncome : 0, \n                nonRegistered,\n            }\n        }\n        else if (highestIncomes > 47000 && highestIncomes < 96000) {\n            const taxAdvantagedDifferential = 40000 - pensionIncome\n            const incomeLessPension = retirementIncome - pensionIncome > 0 ? retirementIncome - pensionIncome : 0 \n            const rrspIncomeBelowTaxTop = taxAdvantagedDifferential > maxRrspPayment ? maxRrspPayment : taxAdvantagedDifferential\n            const rrspIncome = incomeLessPension > rrspIncomeBelowTaxTop ? rrspIncomeBelowTaxTop : incomeLessPension \n            const taxAdvantagedDifferentialLessRrsp = retirementIncome - rrspIncome - pensionIncome\n            const tfsaIncome = taxAdvantagedDifferentialLessRrsp > maxTfsaPayment ? maxTfsaPayment : taxAdvantagedDifferentialLessRrsp\n            const nonRegistered = taxAdvantagedDifferentialLessRrsp - tfsaIncome \n       \n            return  {\n                rrsp: rrspIncome > 0 ? rrspIncome : 0,\n                tfsa: tfsaIncome > 0 ? tfsaIncome : 0, \n                nonRegistered,\n            }\n        }\n        else {\n            const taxAdvantagedDifferential = 77000 - pensionIncome\n            const rrspIncome = taxAdvantagedDifferential > maxRrspPayment ? maxRrspPayment : taxAdvantagedDifferential\n            const taxAdvantagedDifferentialLessRrsp = retirementIncome - rrspIncome - pensionIncome\n            const tfsaIncome = taxAdvantagedDifferentialLessRrsp > maxTfsaPayment ? maxTfsaPayment : taxAdvantagedDifferentialLessRrsp\n            const nonRegistered = taxAdvantagedDifferentialLessRrsp - tfsaIncome \n       \n            return  {\n                rrsp: rrspIncome > 0 ? rrspIncome : 0,\n                tfsa: tfsaIncome > 0 ? tfsaIncome : 0, \n                nonRegistered,\n            }\n        }\n    \n    }\n\n//SET MAXIMUM CONTRIBUTIONS IN SAVINGS REDUCER\n\n\n    export const setMaxContributions = ( birthYear, income_reducer, rrspStartAge, setMaxContribution_action, tfsaStartAge) => {\n\n       for (let age = 18; age < rrspStartAge; age ++) {\n            const year = age + birthYear                                                                                                                                                      //year is used to determine the contribution room avaibale from the government\n            const contributionLimit = historicRRSP[year] ? historicRRSP[year]  : 154611\n            const totalRrspContEligibleIncome = Object.values(income_reducer[age])                                                                                              //We're looking up their income for that year so we can sum it all\n                                                                    .filter(d => d.contributeToCpp)                                                                                    //We only want to sum income on which RRSP is eligible so we remove income on which CPP contributions aren't made\n                                                                    .map(d => d.financialValue).reduce((acc, num) => acc + num)                                                        //Sum the value of all income streams\n\n            const rrspMaxContribution = totalRrspContEligibleIncome > contributionLimit ? (contributionLimit * .18) : (totalRrspContEligibleIncome * .18)\n            console.log(`\n            totalRrspContEligibleIncome: ${totalRrspContEligibleIncome}\n            contributionLimit: ${contributionLimit}\n            rrspMaxContribution: ${rrspMaxContribution}\n            `\n                )\n                ;\n           setMaxContribution_action(age, \"rrsp\", rrspMaxContribution)\n         }\n        \n        for (let age = 18; age < tfsaStartAge; age ++) {\n\n           if (birthYear + age < 2009 && birthYear + age < 2013) {                                                                                                      //The government increased TFSA contributions each year, this is checking the years and inputting the correct contribution max\n            setMaxContribution_action(age, \"tfsa\", 5000)\n           }\n           if (birthYear + age > 2012 && birthYear + age < 2015) {\n            setMaxContribution_action(age, \"tfsa\", 5500)\n           }\n           if (birthYear + age === 2015) {\n            setMaxContribution_action(age, \"tfsa\", 10000)\n           }\n           if (birthYear + age > 2015 && birthYear + age < 2019) {\n            setMaxContribution_action(age, \"tfsa\", 5500)\n           }\n           if (birthYear + age > 2018) {\n            setMaxContribution_action(age, \"tfsa\", 6000)\n           }\n        }\n        \n        }\n\n\n//SET MAXIMUM CONTRIBUTIONS IN SAVINGS REDUCER\n export const determineMaxRegisteredPayments = (income_reducer, rrspStartAge, savings_reducer, tfsaStartAge, rate1, rate2) => {\n\n            const rrspContributionArray = Object.values(savings_reducer).slice(0,(rrspStartAge - 18)).map(d => d.rrsp.maxContribution)\n            const maxRrspValue = rrspContributionArray.reduce((acc, num) => (acc * (1 + rate1)) + num)\n            const maxRrspPayment = payment(rate2, (95-rrspStartAge), maxRrspValue, 0)\n            \n            const tfsaContributionArray = Object.values(savings_reducer).slice(0-(tfsaStartAge - 18)).map(d => d.tfsa.maxContribution)\n            const maxTfsaValue = tfsaContributionArray.reduce((acc, num) => (acc * (1 + rate1)) + num)\n            const maxTfsaPayment = payment(rate2, (95-tfsaStartAge), maxTfsaValue, 0)\n            \n            \n            const incomeArray = Object.values(income_reducer).map(d => Object.values(d).map(a => a.financialValue).reduce((acc, num) => acc + num)).slice(0,47)\n            \n            const highestIncomes = incomeArray.sort((a, b)=> b-a).slice(0,10).reduce((acc, num) => acc + num) /10\n            return {\n                maxTfsaPayment: -maxTfsaPayment,\n                maxRrspPayment: -maxRrspPayment,\n                highestIncomes\n            }\n        }","import {createSelector} from \"reselect\"\nimport {transaction_action} from \"redux/savings/savings_actions\"\nimport {renderSavings} from \"services/savings/savings_functions\"\n\nconst savings_reducer = state => state.savings_reducer\nconst investmentReturns = state => state.assumptions_reducer\n\nexport const rrspStartAge = (state) => state.pensionStartAges_reducer.rrspStartAge.rangeBarValue\nexport const tfsaStartAge = (state) => state.pensionStartAges_reducer.rrspStartAge.rangeBarValue\n\nconst thisYear = new Date()\nconst birthYear = state => state.user_reducer.birthYear\nconst retirementAge = state => state.user_reducer.retirementAge.rangeBarValue\nconst userAge = state => thisYear.getFullYear() - state.user_reducer.birthYear\n\nconst round = number => {\n    return number > 1000000 ?  `${Math.round(number/1000000)*1000000/1000000} M` : `${Math.round(number/1000)*1000/1000} k` \n}\n\n\nexport const investmentReturns_selector = createSelector(\n    [investmentReturns], \n    (investmentReturns) => Object.values(investmentReturns)\n)\n\nexport const returns = state => state.assumptions_reducer\n\nexport const rate1 = createSelector(\n    [returns],\n    (returns) =>  returns.beforeRetirementReturn.rangeBarValue - returns.managementFee.rangeBarValue - returns.inflationRate.rangeBarValue > 0 ? returns.beforeRetirementReturn.rangeBarValue - returns.managementFee.rangeBarValue - returns.inflationRate.rangeBarValue : 0\n)\nexport const rate2 = createSelector(\n    [returns],\n    (returns) => returns.afterRetirementReturn.rangeBarValue - returns.managementFee.rangeBarValue - returns.inflationRate.rangeBarValue > 0 ? returns.afterRetirementReturn.rangeBarValue - returns.managementFee.rangeBarValue - returns.inflationRate.rangeBarValue : 0\n)\n\n\n\n//CHART SELECTORS - change data format to be used in the charts\n\nexport const stackedAreaData = createSelector(\n    savings_reducer,\n    userAge,\n    (savings_reducer, userAge) => {\n \n        const array = []\n        for (let age = userAge; age < 95; age++) {\n           array.push({\n                age: savings_reducer[age].rrsp.age, \n                rrspContributions: savings_reducer[age].rrsp.totalContributions,\n                rrspInterest: savings_reducer[age].rrsp.totalInterest,\n                tfsaContributions: savings_reducer[age].tfsa.totalContributions,\n                tfsaInterest: savings_reducer[age].tfsa.totalInterest,\n                nonRegisteredContributions: savings_reducer[age].nonRegistered.totalContributions,\n                nonRegisteredInterest: savings_reducer[age].nonRegistered.totalInterest,\n            })\n        }\n        return array\n    }\n\n)\n\n\nexport const stackedBarData = createSelector(\n    [savings_reducer],\n    (savings_reducer) =>    {\n        const data = Object.values(savings_reducer).map(d=> {  \n            const namesArray = Object.keys(d)                                                                                                 //Creates an array of all the names eg [\"employmentIncome\", \"cppIncome\", etc.]\n            const valueArray = Object.values(d).map((a, i) => (a.contribute + -a.withdraw))                                                                 //Creates an array of all the financial Values eg [\"22000\", \"1200\", etc.]\n            var result = {age: d.rrsp.age};                                                                                                    //I have to go into one of the objects to access its age which acts like id, I just used cppIncome because it wont be deleted\n            namesArray.forEach((key, i) => result[key] = valueArray[i]);                                                             //Merges the two arrays into a set of key value pairs eg [\"employmentIncome\": 22000]   \n            return result\n        })\n        return data \n    }\n)\n\nexport const stackedBarData2 = createSelector(\n    [savings_reducer, rrspStartAge, userAge],\n    (savings_reducer, rrspStartAge, userAge) =>    {\n        const data = Object.values(savings_reducer).filter(d => d.rrsp.age > userAge).map((d, i, a)=> {  \n            const rrspPercentage = i > (rrspStartAge - 18) ? a[i - 1].rrsp.totalInterest / a[i - 1].rrsp.totalValue : 0\n            const tfsaPercentage = i > (rrspStartAge - 18) ? a[i - 1].tfsa.totalInterest / a[i - 1].tfsa.totalValue : 0\n            const nonRegisteredPercentage = i > (rrspStartAge - 18) ? a[i - 1].nonRegistered.totalInterest / a[i - 1].nonRegistered.totalValue : 0\n            return ({\n                age: d.rrsp.age, \n                rrspContributions: (d.rrsp.contribute + -d.rrsp.withdraw) * (1-rrspPercentage),\n                rrspInterest: (d.rrsp.contribute + -d.rrsp.withdraw) * rrspPercentage,\n                tfsaContributions: (d.tfsa.contribute + -d.tfsa.withdraw) * (1-tfsaPercentage),\n                tfsaInterest:(d.tfsa.contribute + -d.tfsa.withdraw) * (1-tfsaPercentage),\n                nonRegisteredContributions: (d.nonRegistered.contribute + -d.nonRegistered.withdraw) * (1-nonRegisteredPercentage),\n                nonRegisteredInterest: (d.nonRegistered.contribute + -d.nonRegistered.withdraw) * (1-nonRegisteredPercentage),\n            })\n        })\n        return data \n    }\n)\n\n\n\nexport const stackedKeysBarChart = createSelector(\n    [savings_reducer],\n    (savings_reducer) => Object.keys(savings_reducer[18])\n)\n\n\n//HEADER SELECTORS\n\nexport const rrspNestEgg = createSelector(\n    [savings_reducer, rrspStartAge],\n    (savings, rrspStartAge)=> savings[rrspStartAge].rrsp.totalValue \n)\nexport const tfsaNestEgg = createSelector(\n    [savings_reducer, rrspStartAge],\n    (savings, rrspStartAge)=> savings[rrspStartAge].tfsa.totalValue \n)\nexport const nonRegisteredNestEgg = createSelector(\n    [savings_reducer, rrspStartAge],\n    (savings, rrspStartAge)=> savings[rrspStartAge].nonRegistered.totalValue \n)\n\nexport const rrspDisplayValue= createSelector(\n    [savings_reducer, rrspNestEgg],\n    (savings, rrspNestEgg)=> round(rrspNestEgg)\n\n)\nexport const tfsaDisplayValue= createSelector(\n    [savings_reducer, tfsaNestEgg],\n    (savings, tfsaNestEgg) => round(tfsaNestEgg)\n)\nexport const nonRegisteredDisplayValue = createSelector(\n    [savings_reducer, nonRegisteredNestEgg],\n    (savings, nonRegisteredNestEgg) => round(nonRegisteredNestEgg)\n\n)\n\nexport const totalNestEgg = createSelector(\n    [rrspNestEgg, tfsaNestEgg, nonRegisteredNestEgg],\n    (rrspNestEgg, tfsaNestEgg, nonRegisteredNestEgg) => round(rrspNestEgg + tfsaNestEgg + nonRegisteredNestEgg)\n)\n\n\n\nexport const action_selector = createSelector(\n    [rrspNestEgg, tfsaNestEgg, nonRegisteredNestEgg],\n    (rrspNestEgg, tfsaNestEgg, nonRegisteredNestEgg) => round(rrspNestEgg + tfsaNestEgg + nonRegisteredNestEgg)\n)","//DETERMINE CPP AND OAS PAYMENT AFTER AGE CHANGES\n\nfunction adjustCppMemoized() {                                                                      //CPP is either increased or reduced according to the age the user takes it\n    let cache = {};                                                                                 //To increase speed this function is memoized\n    return function( age, cacheKey, income) {\n        if (cacheKey in cache) {\n            return cache[cacheKey]\n        } else {\n            if (age < 65) {                                                                          //If Income is less than 65 it is reduced by 7.2% per year\n                const years = 65 - age \n                const percentage = years * .072\n                const value = income * (1-percentage)\n                return value\n             }\n             else if (age === 65) {return income}                                                     //If age is 65 it is the amount originally calculatied\n             \n             else if (age > 65) {                                                                     //If age is over 65 income is increased by 7.2% per year\n                 const years = age -65\n                 const percentage = years * .072\n                 const value = income * (1 + percentage)\n                 return value\n              }\n        }\n      }\n}\n\nexport const adjustCpp = adjustCppMemoized()\n\n\n\n\nfunction adjustOasMemoized() {                                                                      //OAS is  also either increased or reduced \n    let cache = {};                             \n    return function( age, cacheKey, income) { \n        if (cacheKey in cache) {\n            return cache[cacheKey]                                                                  //it can only begin at age 65 so there is no reduction if taken earlier because the user cant\n        } else {\n            if (age === 65) {return income}\n  \n            else if (age > 65 && age <= 70) {                                                       //anything above age 65 is increased each year\n                const years = age -65\n                const percentage = years * .072\n                const value = income * (1 + percentage)\n                return Math.round(value/100)*100\n             }\n          \n             if (age > 70) {return income * 1.36}                                                    //The largest increase possible is 36%, if the user is over 70 it's just increased by that amount.\n        }\n      }\n}\n\nexport const adjustOas = adjustOasMemoized()\n\n\n\nfunction calculateCppMemoized() {\n    let cache = {};\n    return function(age,birthYear, cacheKey, cppStartAge, ympe, state) {\n         if (cacheKey in cache) {\n             return cache[cacheKey]\n         } else {\n             const pensionableIncome  = Object.values(state).slice(0,53).map(d => {\n \n                 const pensionableIncome = Object.values(d).filter(d => d.contributeToCpp)\n                                                         .map(d => d.financialValue)\n                                                         .reduce((acc, num) => acc + num)\n                  \n                     const currentAge = Object.values(d)[0].age\n                     const currentYear = currentAge + birthYear\n                     const percentage = currentYear < 2019 && currentAge <= 70 ? \n                                                 pensionableIncome / historicYmpe[birthYear + currentAge] < 1 ? \n                                                  pensionableIncome / historicYmpe[birthYear + currentAge] : 1 :\n                                                 pensionableIncome / ympe < 1 ? pensionableIncome / ympe : 1\n     \n                     return { adjustedPensionableIncome: percentage * ympe,}})\n                                 \n                 const  totalAdustedPensionableEarnings =  Object.values(pensionableIncome)\n                                                                 .map(d => d.adjustedPensionableIncome)\n                                                                 .sort().slice(8,47)\n                                                                 .reduce((acc, num) => acc + num)\n             \n                 const averagePensionableEarnings = totalAdustedPensionableEarnings / 39\n                 const annualCppPayment = averagePensionableEarnings * .25\n                 const adjustedCppPayment = Math.round(adjustCpp(cppStartAge, (cppStartAge+annualCppPayment), annualCppPayment)/1000)*1000\n                 cache[cacheKey] = adjustedCppPayment\n                 return cache[cacheKey]\n         }\n    }\n }\n \n export const calculateCpp = calculateCppMemoized()\n \n\n\n//CALCULATE AND INSERT CPP AND OAS INCOME INTO REDUCER\nexport const renderCPPandOASIncome = (cacheKey, calculateCpp_action, cppStartAge, oasStartAge, setIncome_action) => {                   //caclualtes the cpp and oas payments and places them into the income_reducer               \n    for (let age = cppStartAge; age <= 95; age++) {\n          calculateCpp_action(age, cppStartAge, cacheKey)                                                                                //to support memoization we are passing in the financial value as a caheKey which the funciton will use to know if it's ran before\n      }                                                                                                                                  //the actual calculation of the CPP payment is done in the reducer to solve an async issue\n    for (let age = 59; age < cppStartAge; age++) {                                                                                       //resets cpp payments to 0 before the selected start age\n          setIncome_action(age, false, 0, \"CPP Income\", \"cppIncome\")                                                                     //When the user slides the age up, all the income inputted into the reducer below that age has to be removed\n      }\n    for (let age = oasStartAge; age <= 95; age++) {                                                                                      //sets OasIncome in the reducer using the above process\n          setIncome_action(age, false, 7000, \"OAS Income\", \"oasIncome\", 0)  \n      }\n    for (let age = 59; age < oasStartAge; age++) {\n          setIncome_action(age, false,  0, \"OAS Income\", \"oasIncome\", 0)  \n      }\n} \n\n const historicYmpe = {\n    1971: 5400,\n    1972: 5500,\n    1973: 5600,\n    1974: 6600,\n    1975: 7400,\n    1976: 8300,\n    1977: 9300,\n    1978: 10400,\n    1979: 11700,\n    1980: 13100,\n    1981: 14700,\n    1982: 16500,\n    1983: 18500,\n    1984: 20800,\n    1985: 23400,\n    1986: 25800,\n    1987: 25900,\n    1988: 16500,\n    1989: 27700,\n    1990: 28900,\n    1991: 30500,\n    1992: 32200,\n    1993: 33400,\n    1994: 34400,\n    1995: 34900,\n    1996: 35400,\n    1997: 35800,\n    1998: 36900,\n    1999: 37400,\n    2000: 37600,\n    2001: 38300,\n    2002: 39100,\n    2003: 39900,\n    2004: 40500,\n    2005: 41100,\n    2006: 42100,\n    2007: 43700,\n    2008: 44900,\n    2009: 46300,\n    2010: 47200,\n    2011: 48300,\n    2012: 50100,\n    2013: 51100,\n    2014: 52500,\n    2015: 53600,\n    2016: 54900,\n    2017: 55300,\n    2018: 55900,\n    2019: 57400,\n};","\n\n//RETURNS THE MAXIMUM PAYMENTS THE USER COULD RECEIVE FROM RRSP AND TFSA GIVEN THEIR CONTRIBUTION ROOM\n\nfunction calculateOptimumIncomeStreamsMemoized() {\n    let cache = {};\n    return function(cacheKey, highestIncomes, maxRrspPayment, maxTfsaPayment, pensionIncome, retirementIncome) {\n        // console.log(`\n        // cacheKey: ${cacheKey}\n        // highestIncomes: ${highestIncomes}\n        // maxRrspPayment: ${maxRrspPayment}\n        // maxTfsaPayment: ${maxTfsaPayment}\n        // pensionIncome: ${pensionIncome}\n        // retirementIncome: ${retirementIncome}\n        // `);\n        if (cacheKey in cache) \n            return cache[cacheKey]\n            else {\n            \n            \n            if (highestIncomes < 47000) {\n                const incomeLessPension = retirementIncome - pensionIncome > 0 ? retirementIncome - pensionIncome : 0                                                              //this is the difference between the income they would like and what they are recieving from pensions\n                const tfsaIncome = incomeLessPension > maxTfsaPayment ? maxTfsaPayment : incomeLessPension * .7                              //Their first goal should be to draw income from TFSA because of their lower tax bracket\n                const taxAdvantagedDifferentialLessTfsa = incomeLessPension - tfsaIncome\n                const rrspIncome = taxAdvantagedDifferentialLessTfsa > maxRrspPayment ? maxRrspPayment : taxAdvantagedDifferentialLessTfsa \n        \n                const nonRegistered = taxAdvantagedDifferentialLessTfsa - rrspIncome\n                return  {\n                    rrsp: rrspIncome > 0 ? rrspIncome : 0,\n                    tfsa: tfsaIncome > 0 ? tfsaIncome : 0, \n                    nonRegistered,\n                }\n            }\n            else if (highestIncomes > 47000 && highestIncomes < 96000) {\n                const taxAdvantagedDifferential = 40000 - pensionIncome\n                const incomeLessPension = retirementIncome - pensionIncome > 0 ? retirementIncome - pensionIncome : 0 \n                const rrspIncomeBelowTaxTop = taxAdvantagedDifferential > maxRrspPayment ? maxRrspPayment : taxAdvantagedDifferential\n                const rrspIncome = incomeLessPension > rrspIncomeBelowTaxTop ? rrspIncomeBelowTaxTop : incomeLessPension \n                const taxAdvantagedDifferentialLessRrsp = retirementIncome - rrspIncome - pensionIncome\n                const tfsaIncome = taxAdvantagedDifferentialLessRrsp > maxTfsaPayment ? maxTfsaPayment : taxAdvantagedDifferentialLessRrsp\n                const nonRegistered = taxAdvantagedDifferentialLessRrsp - tfsaIncome \n           \n                return  {\n                    rrsp: rrspIncome > 0 ? rrspIncome : 0,\n                    tfsa: tfsaIncome > 0 ? tfsaIncome : 0, \n                    nonRegistered,\n                }\n            }\n            else {\n                const taxAdvantagedDifferential = 77000 - pensionIncome\n                const rrspIncome = taxAdvantagedDifferential > maxRrspPayment ? maxRrspPayment : taxAdvantagedDifferential\n                const taxAdvantagedDifferentialLessRrsp = retirementIncome - rrspIncome - pensionIncome\n                const tfsaIncome = taxAdvantagedDifferentialLessRrsp > maxTfsaPayment ? maxTfsaPayment : taxAdvantagedDifferentialLessRrsp\n                const nonRegistered = taxAdvantagedDifferentialLessRrsp - tfsaIncome \n           \n                return  {\n                    rrsp: rrspIncome > 0 ? rrspIncome : 0,\n                    tfsa: tfsaIncome > 0 ? tfsaIncome : 0, \n                    nonRegistered,\n                }\n            }\n        }\n\n}\n}\n\nexport const calculateOptimumIncomeStreams = calculateOptimumIncomeStreamsMemoized()\n\n\nfunction addRetirementIncomeMemoized() {\n    let cache = {};\n\n    return function addRetirementIncome (cacheKey, incomeStreams, rrspStartAge, tfsaStartAge, setIncome_action) {\n\n        if (cacheKey in cache) \n        return cache[cacheKey]\n        else {\n            for (let age = 50; age < rrspStartAge; age++ ) {\n                setIncome_action(age, false, 0, \"RRSP Income\", \"rrsp\", 0) \n            \n            }\n            for (let age = rrspStartAge; age <= 95; age++ ) {\n                setIncome_action(age, false, Math.round(incomeStreams.rrsp/1000)*1000, \"RRSP Income\", \"rrsp\", 0) \n            \n            }\n            for (let age = 50 ; age < tfsaStartAge; age++ ) {\n                setIncome_action(age, false, 0, \"TFSA Income\", \"tfsa\", 0) \n                setIncome_action(age, false, 0, \"Non reg Income\", \"nonRegistered\", 0) \n            }\n            for (let age = tfsaStartAge; age <= 95; age++ ) {\n                setIncome_action(age, false, Math.round(incomeStreams.tfsa/1000)*1000, \"TFSA Income\", \"tfsa\", 0) \n                setIncome_action(age, false, Math.round(incomeStreams.nonRegistered/1000)*1000, \"Non reg Income\", \"nonRegistered\", 0) \n            }\n        }\n\n        }\n        \n}\n\n\n\n\n\n\n\nexport const addRetirementIncome = addRetirementIncomeMemoized()\n","import React, {useState} from \"react\"\nimport styled from \"styled-components\"\nimport {connect} from \"react-redux\"\nimport {setIncome_action, setKeyVariable_action, removeItem_action, calculateCpp_action} from \"redux/income/income_actions\"\nimport {setRetirementIncome_action} from \"redux/user/user_actions\"\nimport {setPensionStartAge_action} from \"redux/pensionStartAges/pensionStartAges_actions\"\nimport {setMaxContribution_action} from \"redux/savings/savings_actions\"\nimport Header from \"pages/income/components/Header\"\nimport ControlPanel from \"pages/income/components/ControlPanel\"\nimport LifetimeIncomeBarChart from \"charts/income/LifetimeIncomeBarChart\"\nimport { setMaxContributions, determineMaxRegisteredPayments} from \"services/income/income_functions\" \nimport {stackedChartData,  retirementPensionIncome} from \"redux/income/income_selectors\"\nimport {rate1 , rate2} from \"redux/savings/savings_selectors\"\nimport {renderCPPandOASIncome, adjustOas} from  \"services/income/cpp_functions\"\nimport {calculateOptimumIncomeStreams, addRetirementIncome} from  \"services/income/rrspAndTfsa_functions\"\n\nconst LifetimeIncomeAppRefactor = ({setIncome_action, calculateCpp_action, state, setPensionStartAge_action,                                    // destructure out variables\n    income_reducer, removeItem_action, pensionStartAges_reducer, setRetirementIncome_action,  stackedChartData,\n    setMaxContribution_action, user_reducer, savings_reducer, rate1, rate2, retirementPensionIncome,\n    pensionStartAges_reducer: {cppStartAge: {rangeBarValue: cppStartAge}},\n    pensionStartAges_reducer: {oasStartAge: {rangeBarValue: oasStartAge }}}) => {\n\n        const [fromAge, setFromAge] = useState(18)\n        const [toAge, setToAge] = useState(65)    \n\n        const {pensionStartAges_reducer: {rrspStartAge: {rangeBarValue: rrspStartAge}}} = {pensionStartAges_reducer}\n        const {pensionStartAges_reducer: {tfsaStartAge: {rangeBarValue: tfsaStartAge}}} = {pensionStartAges_reducer}\n        const {retirementIncome: {financialValue: retirementIncome}} = user_reducer\n   \n        const {maxTfsaPayment, maxRrspPayment, highestIncomes, } = determineMaxRegisteredPayments(income_reducer, rrspStartAge, savings_reducer, tfsaStartAge, rate1, rate2) \n\n        const incomeStreams = calculateOptimumIncomeStreams((retirementPensionIncome + maxRrspPayment.toString()), highestIncomes, maxRrspPayment, maxTfsaPayment, retirementPensionIncome, retirementIncome)\nconsole.log(state);\n\n\n//INCOME INPUT\n    const setIncome = (financialValue, rangeBarValue, {contributeToCpp, label, name}) => {                                                 //used by rangebars to set income in incomeByYear reducer\n    const cacheKey = financialValue + name +  (fromAge.toString()) + (toAge.toString())                                                   //creates a unique cacheKey which will be used to check if the function has been run before and return the last answer if it was - memoization\n        for (let age = fromAge; age < toAge; age++ ) {                                                           \n            setIncome_action(age, contributeToCpp, financialValue, label, name, rangeBarValue)                                            //sets the income for each of the years between the selected ranges\n        }    \n            contributeToCpp && renderCPPandOASIncome(cacheKey, calculateCpp_action, cppStartAge, oasStartAge, setIncome_action)    \n                                                                                                                            //only recalculates CPP if contributions to CPP are made on the income                                                        \n    }\n\n\n    const addItemToList = (financialValue, rangeBarValue, {isChecked, label, name}) => {\n        let contributeToCpp = isChecked\n        for(let age = 18; age < 95; age++) {\n        setIncome_action(age, isChecked, 0, label, name, 0)\n        }\n        setIncome (financialValue, rangeBarValue, {contributeToCpp, label, name})\n    }\n\n//CHANGE INCOME LABEL\n    const handleChangeLabel = (e,  {financialValue, rangeBarValue, contributeToCpp, label, name}) => {                                   // eg. the user changes label from \"Employment income\" to \"Wal mart Income\"\n    for (let age = fromAge; age < toAge; age++ ) {\n        setIncome_action(age, contributeToCpp, financialValue, e.target.value, name, rangeBarValue) \n    }\n    }\n\n//PENSION INCOME CALCULATION\n    const setPensionIncome = (x, value, {name})  => {   \n        setPensionStartAge_action(name, value)                                                                                           //Takes value from rangeBar and sets it into the pension start age reducer \n        const cacheKey = value+name\n        if  (name === \"cppStartAge\") {                                                                                                   //Checks name of value being changed and sets it into the lifetimeIncomeYearList \n            for (let age = value; age <=95; age ++) {                                                                                    //Runs from the age selected in the rangeBar to age 95 and inserts the income into the reducer\n                calculateCpp_action(age, value, cacheKey)\n            }\n            for (let age = 59; age < value; age++) {\n                setIncome_action(age, false, 0, \"CPP Income\", \"cppIncome\")  \n            }}\n        else if  (name === \"oasStartAge\") {\n            const oasPayment = adjustOas(value, value, 7000)\n            for (let age = value; age <=95; age ++) {                                                                                     //Runs from the age selected in the rangeBar to age 95 and inserts the income into the reducer\n                setIncome_action(age, false, oasPayment, \"OAS Income\", \"oasIncome\") \n            }\n            for (let age = 64; age < value; age++) {\n                setIncome_action(age, false, 0, \"OAS Income\", \"oasIncome\")  \n            }}\n        else if (name === \"tfsaStartAge\") {\n            setKeyVariable_action(name, value)\n            setMaxContributions(birthYear, income_reducer, rrspStartAge, setMaxContribution_action, value) \n            addRetirementIncome((incomeStreams.tfsa + incomeStreams.rrsp.toString() + value), incomeStreams, tfsaStartAge, value, setIncome_action)\n        }\n        else if (name === \"rrspStartAge\") {\n            setKeyVariable_action(name, value)\n            setMaxContributions(birthYear, income_reducer, rrspStartAge, setMaxContribution_action, value) \n            addRetirementIncome((incomeStreams.tfsa + incomeStreams.rrsp.toString() + value), incomeStreams, value, rrspStartAge, setIncome_action)\n        }\n\n       }\n\n//REMOVE INCOME TYPE\nconst handleRemoveItem = ({name}) => {          \n    console.log(name);                                                                                            //used to remove income types from reducer\n    for (let age = 18; age < 95; age++ ) {\n      removeItem_action(age, name)\n    }\n}\n\nconst {birthYear} = user_reducer\n\n\n\n//SET TOTAL RETIREMENT PENSION INCOME IN KEY VARIABLES REDUCER\n\n\nconst setReccomendedRetirementIncome = (financialValue, rangeBarValue) => {\n    setRetirementIncome_action(financialValue, rangeBarValue)\n    const incomeStreams = calculateOptimumIncomeStreams((retirementPensionIncome + maxRrspPayment.toString()), highestIncomes, maxRrspPayment, maxTfsaPayment, retirementPensionIncome, financialValue)\n    setMaxContributions(birthYear, income_reducer, rrspStartAge, setMaxContribution_action, tfsaStartAge) \n    addRetirementIncome((incomeStreams.tfsa + incomeStreams.rrsp.toString()), incomeStreams, rrspStartAge, tfsaStartAge, setIncome_action)\n} \n        return (\n            <Page>\n                <Header\n                     income_reducer={income_reducer}\n                />\n                <ChartPlaceHolder>\n                <LifetimeIncomeBarChart/>\n                </ChartPlaceHolder>    \n            <ControlPanel\n                    handleChangeLabel = {handleChangeLabel}\n                    handleRemoveItem={handleRemoveItem}\n                    addItemToList={addItemToList}\n                    setFromAge={setFromAge}\n                    setToAge={setToAge}\n                    fromAge={fromAge}\n                    toAge={toAge}\n                    savings_reducer={savings_reducer}\n                    setIncome_action={setIncome_action}\n                    setIncome={setIncome}\n                    setPensionIncome={setPensionIncome}\n                    pensionStartAges_reducer={pensionStartAges_reducer}\n                    income_reducer={income_reducer}\n                    setRetirementIncome_action={setRetirementIncome_action}\n                    user_reducer={user_reducer}\n                    setMaxContribution_action={setMaxContribution_action}\n                    data={stackedChartData}\n                    setKeyVariable_action={setKeyVariable_action}\n                    setReccomendedRetirementIncome={setReccomendedRetirementIncome}\n            />\n\n            </Page>\n        )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state: state,\n        income_reducer: state.income_reducer,\n        user_reducer: state.user_reducer,\n        pensionStartAges_reducer: state.pensionStartAges_reducer,\n        savings_reducer: state.savings_reducer,\n        stackedChartData: stackedChartData(state),\n        rate1: rate1(state),\n        rate2: rate2(state),\n        retirementPensionIncome: retirementPensionIncome(state),\n    }\n}\n\nexport default connect(mapStateToProps, {setIncome_action,  setKeyVariable_action, setMaxContribution_action, calculateCpp_action, setPensionStartAge_action,  removeItem_action, setRetirementIncome_action})(LifetimeIncomeAppRefactor)\n\n\n//-----------------------------------------------style-----------------------------------------------//\n\nconst Page = styled.div`\n    ${props => props.theme.pageBaseStyles}\n    grid-template-rows: minmax(8rem, 14rem) minmax(18rem, 22rem) minmax(22rem, 24rem);\n    grid-template-areas:\n    'a a a a a a a a a a a a'\n    'b b b b b b b b b b b b'\n    'c c c c c c c c c c c c'\n`\nconst ChartPlaceHolder = styled.div`\n    grid-area: b;\n    width: 90%;\n    margin-left: 5%;\n    height: 100%;\n\n`\n\n//-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_FILE DETAILS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_//\n/* Shows the user the control panel, the tile pane and the chart of the LifeTime Income Calculator. \n\nThe main functions for this app are written here in the app. \n\n*/","\n\nexport const transaction_action = (age, name, transaction, rangeBarValue, rate1, rate2, retirementAge, value) => ({\n    type: \"savings_reducer/TRANSACTION\", \n            age,\n            name, \n            rangeBarValue, \n            rate1,\n            rate2,\n            retirementAge,\n            value,\n            transaction\n})\n\n\nexport const setOpitmizedValues_action = (age, name, transaction, value) => {\n    return {\n        type: \"investmentReturns/SET_OPTIMIZED_VALUE\", \n            age,\n            name, \n            transaction,\n            value,\n    }\n    }\n\nexport const setMaxContribution_action = (age, name, value) => ({\n        type: \"savingsPerYear/SET_MAX_CONTRIBUTION\",\n            age,\n            name,\n            value\n    })\n    \n","\nexport const setPensionStartAge_action = (name, value) => {\nreturn {\n    type: \"SET_PENSION_START_AGE\", \n        name, \n        value \n}\n}\n\n","export const setRetirementIncome_action = (financialValue, rangeBarValue) => {\n    return {\n        type: \"user_reducer/SET_RETIREMENT_INCOME\", \n            financialValue, \n            rangeBarValue\n    }\n    }\n    \n    \nexport const setUserDetails_action = (userId, userDetails) => {\n    return {\n        type: \"user_reducer/SET_USER_DETAILS\", \n        userId, \n        email: userDetails.email, \n    }\n    }\n    \n    \nexport const setUserDetail_action = (name, value) => ({\n    type: \"user_reducer/SET_USER_DETAIL\", \n       name,\n       value\n    })\n    \nexport const setNestedUserDetail_action = (identifier, name, value) => ({\n    type: \"user_reducer/SET_NESTED_USER_DETAIL\", \n       identifier,\n       name,\n       value\n    })\n","import React from 'react'\nimport Header from \"./Header\"\nimport Footer from \"./Footer\"\nimport {Route} from \"react-router-dom\"\nimport Income from \"pages/income/Income\"\nimport {ThemeProvider} from \"styled-components\"\nimport { lightTheme} from \"style/Themes\"\nimport styled from \"styled-components\"\nimport {connect} from \"react-redux\"\n\n\n\n\nconst Layout = () => {\n        return (\n            <ThemeProvider theme={lightTheme}>\n                <>\n                <Header />\n                <GridContainer>  \n                        <Route path=\"/\" component={Income}/>  \n                </GridContainer>                        \n                <Footer/>\n                </>\n            </ThemeProvider>\n        )\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n\n    }\n}\n\nexport default connect(mapStateToProps)(Layout)\n//\n//------------------style---------------------------------------------------------------\n const GridContainer = styled.div`\n    height: 100vh;\n    margin: 4px auto;\n    width: 100vw;\n    display: grid;\n    grid-template-rows: 98vh;\n    overflow: scroll;\n    color: ${props => props.theme.color.slate};\n    grid-template-areas: \n    \"m\"\n\n    /* The Grid container holds the grid item \"m\" for \"main\" and \"f\" for footer. When a sub-app is clicked\n     on its grid location becomes m placing it in the \"main position\" */\n`\n\n\n    //-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_FILE DETAILS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_//\n    // This is the switch board of the app. The header and footer are rendred and always present. Then the \n    // center panel can be changed using routing to move through and visit various sub apps such as the net worth\n    // calculator. ","import React from 'react'\nimport Layout from \"layout/Layout\"\nimport {BrowserRouter} from \"react-router-dom\"\nimport { GlobalStyles } from \"./style/Themes\"\nimport {connect} from \"react-redux\"\n\n\n function App() {\n     return (\n        <>\n          <GlobalStyles />\n          <BrowserRouter>\n              <Layout />\n         </BrowserRouter>   \n        </>\n    )\n}\n\n\nexport default connect(null, )(App)\n\n\n//\n//-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_FILE DETAILS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_\n// Here the Global style are inserted and passed to all children in the app. Browser Router is \n//also initiated to enable routing between pages. ","import _ from \"lodash\"\nimport {calculateCpp} from  \"services/income/cpp_functions\"\n\nconst initialState = () => {\n    const income = {}\n    for (let i = 18; i <= 95; i++) {\n        income[Number(i)] = {\n                cppIncome: {\n                    age: i, \n                    contributeToCpp: true,\n                    financialValue: 0, \n                    label: \"CPP Income\",\n                    name: \"cppIncome\",\n                    rangeBarValue: 0, \n                },\n              employmentIncome: {\n                    age: i, \n                    contributeToCpp: true,\n                    financialValue: 0, \n                    label: \"Employment Income\",\n                    name: \"employmentIncome\",\n                    rangeBarValue: 0, \n\n                },\n                oasIncome: {\n                    age: i, \n                    contributeToCpp: false,\n                    financialValue: 0, \n                    label: \"OAS Income\",\n                    name: \"oasIncome\",\n                    rangeBarValue: 0, \n                },\n                rrsp: {\n                    age: i, \n                    contributeToCpp: false,\n                    financialValue: 0, \n                    label: \"RRSP Income\",\n                    name: \"rrsp\",\n                    rangeBarValue: 0, \n                },\n                businessIncome: {\n                    age: i, \n                    contributeToCpp: false,\n                    financialValue: 0, \n                    label: \"Business Income\",\n                    name: \"businessIncome\",\n                    rangeBarValue: 0, \n\n                },\n                tfsa: {\n                    age: i, \n                    contributeToCpp: false,\n                    financialValue: 0, \n                    label: \"TFSA Income\",\n                    name: \"tfsa\",\n                    rangeBarValue: 0, \n\n                },\n                nonRegistered: {\n                    age: i, \n                    contributeToCpp: false,\n                    financialValue: 0, \n                    label: \"Non-Registered Income\",\n                    name: \"nonRegistered\",\n                    rangeBarValue: 0, \n\n                },\n        }}\nreturn income\n}\n\n const income_reducer = (state = initialState(), action) => {\n    switch(action.type) {\n        case \"SET_INCOME_PER_YEAR\": \n        return {...state, [action.payload.age]: {\n                                        ...state[action.payload.age], [action.payload.name]: action.payload\n                                        }}\n        case \"REMOVE_INCOME_TYPE\": \n\n        return {...state, [action.age]:  _.omit(state[action.age], action.name)\n            }\n        case \"CALCULATE_CPP_REFACTOR\":  \n                const cppPayment = calculateCpp(action.age, 1988, action.cacheKey, action.cppStartAge, 55420, state)\n                return {...state, [action.age]: {\n                                                    ...state[action.age], cppIncome: {\n                                                        age: action.age,\n                                                        financialValue: cppPayment,\n                                                        label: \"CPP Income\",\n                                                        name: \"cppIncome\"\n                                                    }\n                                                    }}\n\n\n        default: return state\n    }\n}\n\n\n\n\nexport default income_reducer\n\n\n\n//-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_FILE DETAILS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_//\n/*\nthe objective of this reducer is to provide state detailing the income of an individual for every year from age 18 to 95. \n\nInitial State\n\n   The initial state is a loop between 18 and 95 setting the income of each year as 0 and placing the essential framework for changes to be made. Each year of an \n   individuals life can have its different types of income set.\n\n*/","\nconst initialState = {\n    cppStartAge: {\n        name: \"cppStartAge\",\n        label: \"CPP Start Age\",\n        rangeBarValue: 65, \n        min: 60,\n        max: 70,\n        step: 1,\n        numberType: \"age\",\n        valueThisRangeBarChanges: \"cppIncome\"\n    },\n    oasStartAge: {\n        name: \"oasStartAge\",\n        label: \"OAS Start Age\",\n        rangeBarValue: 65, \n        min: 65,\n        max: 70,\n        step: 1,\n        numberType: \"age\",\n        valueThisRangeBarChanges: \"oasIncome\"\n    },\n    rrspStartAge: {\n        name: \"rrspStartAge\",\n        label: \"Convert RRSP to rrsp\",\n        rangeBarValue: 65, \n        min: 50,\n        max: 72,\n        step: 1,\n        numberType: \"age\",\n        valueThisRangeBarChanges: \"rrsp\"\n    },\n    tfsaStartAge: {\n        name: \"tfsaStartAge\",\n        label: \"Start TFSA Withdrawals\",\n        rangeBarValue: 65, \n        min: 50,\n        max: 72,\n        step: 1,\n        numberType: \"age\",\n        valueThisRangeBarChanges: \"tfsa\"\n    }\n}\n\n\nconst pensionStartAges_reducer = (state = initialState, action) => {\nswitch(action.type) {\n    case \"SET_PENSION_START_AGE\": return {...state, [action.name]: {\n                                            ...state[action.name],  rangeBarValue: action.value,\n                                        }\n    } \n    default: return state\n}     \n}\n\n\nexport default pensionStartAges_reducer\n\n","\nconst determineTotalContributions = (age, name, state, transaction, value)=> {\n    const lastValue = state[age - 1][name]\n    const principlePercentage = lastValue.totalContributions / lastValue.totalValue\n   const contribute = transaction === \"contribute\" ? value : (-value * principlePercentage)\n   const totalContribution = lastValue.totalContributions + contribute \n   return totalContribution > 0 ? totalContribution : 0\n   \n   }\n   const determineTotalInterest = (age, name, rate1, rate2, retirementAge, state, transaction, value) => {\n       const lastValue = state[age - 1][name]\n       const rate = age >= retirementAge ? rate2 : rate1\n       const interestPercentage = lastValue.totalInterest / lastValue.totalValue\n       const withdraw = transaction === \"withdraw\" ? (value * interestPercentage ) : 0\n    \n       const totalInterest = (((lastValue.totalContributions + lastValue.totalInterest) * rate) + lastValue.totalInterest) - withdraw\n       return totalInterest > 0 ? totalInterest : 0\n   }\n   \n   \n   const initialState = () => {\n       const savings = {}\n       for (let age = 17; age <= 96; age++) {\n           savings[Number(age)] = {\n                   rrsp: {\n                       age: age, \n                       contribute: 0,\n                       financialValue: 0,\n                       label: \"RRSP Withdrawals\",\n                       maxContribution: 0,\n                       optimizedContribution: 0, \n                       optimizedWithdrawal: 0, \n                       name: \"rrsp\",\n                       rangeBarValue: 0, \n                       totalContributions: 0, \n                       totalInterest: 0, \n                       totalValue: 0, \n                       withdraw: 0,\n                   },\n                 tfsa: {\n                       age: age, \n                       contribute: 0, \n                       financialValue: 0,\n                       label: \"Tax Free Savings Account\",\n                       name: \"tfsa\",\n                       maxContribution: 0,\n                       optimizedContribution: 0, \n                       optimizedWithdrawal: 0, \n                       rangeBarValue: 0, \n                       totalContributions: 0, \n                       totalInterest: 0, \n                       totalValue: 0, \n                       withdraw: 0,\n                   },\n                   nonRegistered: {\n                       age: age, \n                       contribute: 0,\n                       financialValue: 0,\n                       label: \"Non Registered\",\n                       maxContribution: 0,\n                       name: \"nonRegistered\",\n                       optimizedContribution: 0, \n                       optimizedWithdrawal: 0, \n                       rangeBarValue: 0, \n                       totalContributions: 0, \n                       totalInterest: 0, \n                       totalValue: 0, \n                       withdraw: 0,\n                   }\n           }}\n   return savings\n   }\n   \n    const savings_reducer = (state = initialState(), action) => {\n       switch(action.type) {\n           case \"savings_reducer/TRANSACTION\": \n           const totalContributions = determineTotalContributions(action.age, action.name, state, action.transaction, action.value)\n           const totalInterest = determineTotalInterest(action.age, action.name, action.rate1, action.rate2, action.retirementAge, state, action.transaction, action.value)\n           const totalValue = totalContributions + totalInterest\n           return {...state, [action.age]: {\n                                       ...state[action.age], [action.name]: {\n                                           ...state[action.age][action.name], [action.transaction]: totalValue <= 0 ? 0 : action.value,\n                                                                               financialValue: action.value,\n                                                                               rangeBarValue: action.rangeBarValue,\n                                                                               totalContributions,\n                                                                               totalInterest,\n                                                                               totalValue \n           }}}\n           case \"investmentReturns/SET_OPTIMIZED_VALUE\": return {...state, [action.age]: {\n                                                                        ...state[action.age], [action.name]: {\n                                                                           ...state[action.age][action.name],\n                                                                                   [action.transaction]: action.value\n                                                                        }\n           }\n   \n           }\n           case \"savingsPerYear/SET_MAX_CONTRIBUTION\": return {...state, [action.age]: {\n                                                                        ...state[action.age], [action.name]: {\n                                                                           ...state[action.age][action.name],\n                                                                                maxContribution: action.value\n                                                                        }\n           }\n   \n           }\n           \n           default: return state\n       }\n   }\n   \n   \n   \n   \n   export default savings_reducer\n   \n   \n   \n   //-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_FILE DETAILS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_//\n   /*\n   the objective of this reducer is to provide state detailing the income of an individual for every year from age 18 to 95. \n   \n   Initial State\n   \n      The initial state is a loop between 18 and 95 setting the income of each year as 0 and placing the essential framework for changes to be made. Each year of an \n      individuals life can have its different types of income set.\n   \n   */","\nconst initialState = {\n    id: \"\",\n    displayName: \"\",\n    email: \"\",\n    firstName: \"\",\n    province: \"\",\n    spouse: false,\n    birthYear: 1978,\n    rrifWithdrawalAge: 65,\n    retirementPensionIncome: 0,\n    hasChildren: false,\n    numberOfChildren: 0,\n    retirementAge: {\n        name: \"retirementAge\",\n        label: \"Target Retirement Age\",\n        rangeBarValue: 65, \n        min: 30,\n        max: 80,\n        step: 1,\n        numberType: \"age\",\n    },\n    lifeSpan: {\n        name: \"lifeSpan\",\n        label: \"Estimated Life Span\",\n        rangeBarValue: 95, \n        min: 75,\n        max: 110,\n        step: 1,\n        numberType: \"age\",\n    },\n    priorities: {\n        gettingOutOfDebt: false,\n        buildingASavingsPlan: false,\n        CalculatingRetirementIncome: false,\n        purchasingAHome: false,\n        savingOnTaxes: false,\n        managingSpending: false,\n    },\n    retirementIncome: {\n        financialValue: 0, \n        label: \"Desired Retirement Income\",\n        name: \"retirementIncome\",\n        rangeBarValue: 0, \n    },\n        \n}\n\nconst user_reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case \"SET_KEY_VARIABLE\": \n        return {...state, [action.name]: action.value}        \n        case \"user_reducer/SET_RETIREMENT_INCOME\": \n        return {...state, retirementIncome: {\n            ...state.retirementIncome, \n                                        financialValue: action.financialValue, \n                                        rangeBarValue: action.rangeBarValue\n\n        }  }\n        case \"user_reducer/SET_USER_DETAILS\": \n        return {...state, \n                                       id: action.userId,\n                                       email: action.useremail,\n                                       displayName: action.displayName,\n         }\n        case \"user_reducer/SET_USER_DETAIL\": \n        return {...state, \n                                    [action.name]: action.value\n         }\n        case \"user_reducer/SET_NESTED_USER_DETAIL\": \n        return {...state, [action.identifier]: {\n            ...state[action.identifier], [action.name]: action.value\n        }\n         }\n\n        default: return state\n    }\n}\n\nexport default user_reducer\n\n","\nconst initialState = {\n    beforeRetirementReturn: {\n        name: \"beforeRetirementReturn\",\n        label: \"Before Retirement Return\",\n        rangeBarValue: .065, \n        min: 0,\n        max: .11,\n        step: .0001,\n        numberType: \"percentage\",\n    },\n        afterRetirementReturn: {\n        name: \"afterRetirementReturn\",\n        label: \"After Retirement Return \",\n        rangeBarValue: .05, \n        min: 0,\n        max: .1,\n        step: .0001,\n        numberType: \"percentage\",\n    },\n    managementFee: {\n        name: \"managementFee\",\n        label: \"Management Fee\",\n        rangeBarValue: .02, \n        min: 0,\n        max: .035,\n        step: .0001,\n        numberType: \"percentage\",\n    },\n    inflationRate: {\n        name: \"inflationRate\",\n        label: \"Inflation Rate\",\n        rangeBarValue:.02, \n        min: 0,\n        max: .1,\n        step: .0001,\n        numberType: \"percentage\",\n    },\n    propertyAppreciation: {\n        name: \"propertyAppreciation\",\n        label: \"Property Appreciation\",\n        rangeBarValue:.03, \n        min: 0,\n        max: .1,\n        step: .0001,\n        numberType: \"percentage\",\n    },\n}\n\nconst assumptions_reducer = (state = initialState, action) => {\nswitch(action.type) {\n    case \"assumptions/SET_VALUE\": return {...state, [action.name]: {\n                                            ...state[action.name],  rangeBarValue: action.value,\n                                        }\n    } \n    default: return state\n}     \n}\n\n\nexport default assumptions_reducer\n\n","import {persistReducer} from \"redux-persist\"\nimport storage from \"redux-persist/lib/storage\"\nimport {combineReducers} from \"redux\"\nimport income_reducer from \"redux/income/income_reducer\"\nimport pensionStartAges_reducer from \"./pensionStartAges/pensionStartAges_reducer\"\nimport savings_reducer from \"./savings/savings_reducer\"\nimport user_reducer from \"./user/user_reducer\"\nimport assumptions_reducer from \"./assumptions/assumptions_reducer\"\n\nconst persistConfig = {\n    key: \"root\",\n    storage, \n    whitelist: [\n        \"income_reducer\",\n        \"pensionStartAges_reducer\",\n        \"savings_reducer\",\n        \"user_reducer\",\n        \"assumptions_reducer\" , \n]\n}\n\n\n\nconst rootReducer = combineReducers({\n    income_reducer,\n    pensionStartAges_reducer,\n    savings_reducer,\n    user_reducer,\n    assumptions_reducer  \n   })\n\nexport default persistReducer(persistConfig, rootReducer)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from \"react-redux\"\nimport { createStore} from 'redux'\nimport rootReducer from \"./redux/rootReducer\"\nimport {persistStore} from \"redux-persist\"\nimport {PersistGate} from \"redux-persist/integration/react\"\n\n\nconst store = createStore(rootReducer);\nconst persistor = persistStore(store)\n    \nReactDOM.render(\n    <Provider store={store}>\n         <PersistGate persistor={persistor}>\n                <App />\n         </PersistGate>\n     </Provider>\n, document.getElementById('root'));\n\n","module.exports = __webpack_public_path__ + \"static/media/SavvyPlan_logo_final_grey.5e012e8c.svg\";","module.exports = __webpack_public_path__ + \"static/media/SavvyPlan_logo_final_white_justlogo.decc070f.svg\";"],"sourceRoot":""}